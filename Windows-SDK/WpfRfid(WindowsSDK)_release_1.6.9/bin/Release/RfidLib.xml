<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RfidLib</name>
    </assembly>
    <members>
        <member name="T:RfidLib.comm.CmdPipe">
            <summary>
            命令队列
            </summary>
        </member>
        <member name="F:RfidLib.comm.CmdPipe.list">
            列表
        </member>
        <member name="M:RfidLib.comm.CmdPipe.pipeIn(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             入队列
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.pipeOut">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             出队列
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.pipeGet(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The pipeGet
             </summary>
             <param name="index">The index<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.pipeRemove(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The pipeRemove
             </summary>
             <param name="index">The index<see cref="T:System.Int32"/></param>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.getSize">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The getSize
             </summary>
             <returns>The <see cref="T:System.Int32"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.isEmpty">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The isEmpty
             </summary>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.comm.CmdPipe.clear">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The clear
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.comm.ShareData">
            <summary>
            Defines the <see cref="T:RfidLib.comm.ShareData" />
            </summary>
        </member>
        <member name="F:RfidLib.comm.ShareData.mContext">
            上下文
        </member>
        <member name="F:RfidLib.comm.ShareData.SHARED_TEXT">
            Defines the SHARED_TEXT
        </member>
        <member name="F:RfidLib.comm.ShareData.SHARED_DRAWABLE">
            Defines the SHARED_DRAWABLE
        </member>
        <member name="F:RfidLib.comm.ShareData.SHARED_FILE">
            Defines the SHARED_FILE
        </member>
        <member name="M:RfidLib.comm.ShareData.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="mContext">The mContext<see cref="T:System.Object"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.data.TagNode">
            <summary>
            树结构 - 节点
            </summary>
        </member>
        <member name="F:RfidLib.data.TagNode.level">
            * 级别(树结构换成列表使用)
        </member>
        <member name="F:RfidLib.data.TagNode.expan">
            * 展开
        </member>
        <member name="F:RfidLib.data.TagNode.name">
            * 名称
        </member>
        <member name="F:RfidLib.data.TagNode.tag">
            * 数据
        </member>
        <member name="F:RfidLib.data.TagNode.list">
            * 子节点
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor">
            -------------------------------------------------------------------------------------------------------------
             * 初始化
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="name">名称<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor(System.String,System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="name">名字<see cref="T:System.String"/></param>
             <param name="tag">标签<see cref="T:System.Object"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor(System.String,System.Object,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="_name">名称<see cref="T:System.String"/></param>
             <param name="_tag">标签<see cref="T:System.Object"/></param>
             <param name="_level">深度<see cref="T:System.Int32"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor(System.String,System.Object,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="_name">名称<see cref="T:System.String"/></param>
             <param name="_tag">对象<see cref="T:System.Object"/></param>
             <param name="_level">深度<see cref="T:System.Int32"/></param>
             <param name="_expan">展开<see cref="T:System.Boolean"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.#ctor(RfidLib.data.TagNode)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制数据
             </summary>
             <param name="n">节点<see cref="T:RfidLib.data.TagNode"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.get(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取子节点
             </summary>
             <param name="index">序号<see cref="T:System.Int32"/></param>
             <returns>节点<see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.add(RfidLib.data.TagNode)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             添加节点
             </summary>
             <param name="node">The node<see cref="T:RfidLib.data.TagNode"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.clean">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             清空
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.isEnd">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The isEnd
             </summary>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.getCount">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取终极节点数量
             </summary>
             <returns>The <see cref="T:System.Int32"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.Dump(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             级别输出
             </summary>
             <param name="level">The level<see cref="T:System.Int32"/></param>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The ToString
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.getName">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取名称
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagNode.CompareTo(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             比较大小
             </summary>
             <param name="obj"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.data.TagTree">
            <summary>
            Defines the <see cref="T:RfidLib.data.TagTree" />
            </summary>
        </member>
        <member name="F:RfidLib.data.TagTree.DEBUG">
            * 调试
        </member>
        <member name="F:RfidLib.data.TagTree.TAG">
            * 目标
        </member>
        <member name="F:RfidLib.data.TagTree.isContain">
            * 包含分隔符号
        </member>
        <member name="F:RfidLib.data.TagTree.root">
            * 根节点
        </member>
        <member name="F:RfidLib.data.TagTree.splite">
            * 分隔符号
        </member>
        <member name="M:RfidLib.data.TagTree.#ctor">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             Initializes a new instance of the <see cref="T:RfidLib.data.TagTree"/> class.
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.setRootName(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置根名称
             </summary>
             <param name="text">The text<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.getRootName">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The getRootName
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.setSplite(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             分隔符号
             </summary>
             <param name="splite">The splite<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.getSplite">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             分隔符号
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.setContain(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             包含分隔符
             </summary>
             <param name="contain">The contain<see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:RfidLib.data.TagTree.getContain">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The getContain
             </summary>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.nodeToList(System.Collections.Generic.List{RfidLib.data.TagNode},RfidLib.data.TagNode,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             节点转化成列表
             </summary>
             <param name="list">列表<see cref="T:System.Collections.Generic.List`1"/></param>
             <param name="node">节点<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="level">深度<see cref="T:System.Int32"/></param>
             <returns>列表数量<see cref="T:System.Int32"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.toList">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成列表
             </summary>
             <returns>The <see cref="T:System.Collections.Generic.List`1"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.addList(RfidLib.data.TagNode,System.Collections.Generic.List{RfidLib.data.TagNode})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             合并树
             </summary>
             <param name="nodeParent">父级节点<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="listSubs">子节点<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doImport(System.Collections.Generic.List{RfidLib.rfid.TagItem})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             导入 - 标签列表
             </summary>
             <param name="list">The list<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doAutoRemove(RfidLib.data.TagNode,System.Collections.Generic.List{RfidLib.rfid.TagItem}@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             找到不存在的叶子节点!删除!
             </summary>
             <param name="_root">The _root<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="list">The list<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.autoRemove(System.Collections.Generic.List{RfidLib.rfid.TagItem})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             自动删除
             </summary>
             <param name="list">The list<see cref="T:System.Collections.Generic.List`1"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doExport">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             导出
             </summary>
             <returns>The <see cref="T:System.Collections.Generic.List`1"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.findInList(RfidLib.rfid.TagItem,System.Collections.Generic.List{RfidLib.rfid.TagItem})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找标签
             </summary>
             <param name="_item">项目<see cref="T:RfidLib.rfid.TagItem"/></param>
             <param name="_list">列表<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:RfidLib.rfid.TagItem"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.findInList(System.String,System.Collections.Generic.List{RfidLib.data.TagNode})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找 - 列表
             </summary>
             <param name="_name">名称<see cref="T:System.String"/></param>
             <param name="_list">列表<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.findInList(RfidLib.data.TagNode,System.Collections.Generic.List{RfidLib.data.TagNode})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             列表中查找
             </summary>
             <param name="_node">节点<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="_list">列表<see cref="T:System.Collections.Generic.List`1"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.find(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找 - 树结构
             </summary>
             <param name="_name">名称<see cref="T:System.String"/></param>
             <returns>节点 <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.findInTree(System.String,RfidLib.data.TagNode)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找树结构
             </summary>
             <param name="_name">The _name<see cref="T:System.String"/></param>
             <param name="_node">The _node<see cref="T:RfidLib.data.TagNode"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.findInTree(RfidLib.data.TagNode,RfidLib.data.TagNode)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找节点
             </summary>
             <param name="_nodFind">查找节点<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="_nodeRoot">范围<see cref="T:RfidLib.data.TagNode"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doParser(System.Collections.Generic.List{System.String},System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The doParser
             </summary>
             <param name="_list">The _list<see cref="!:List&lt;string&gt;"/></param>
             <param name="_split">The _split<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doParser(System.String[],System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The doParser
             </summary>
             <param name="_array">The _array<see cref="!:string[]"/></param>
             <param name="_split">The _split<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.doSplit(System.String,System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The doSplit
             </summary>
             <param name="_name">The _name<see cref="T:System.String"/></param>
             <param name="_split">The _split<see cref="T:System.String"/></param>
             <returns>The <see cref="!:string[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.parser(RfidLib.data.TagNode,System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The parser
             </summary>
             <param name="_root">The _root<see cref="T:RfidLib.data.TagNode"/></param>
             <param name="_split">The _split<see cref="T:System.String"/></param>
             <returns>The <see cref="T:System.Int32"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.parser(System.Collections.Generic.List{System.String},System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             列表文字转树结构
             </summary>
             <param name="list">The list<see cref="!:List&lt;string&gt;"/></param>
             <param name="split">The split<see cref="T:System.String"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.parser(System.String[],System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解析数据
             </summary>
             <param name="_array">The _array<see cref="!:string[]"/></param>
             <param name="_split">The _split<see cref="T:System.String"/></param>
             <returns>The <see cref="T:RfidLib.data.TagNode"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.limitText(System.String[],System.Int32,System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             合并分解的数据
             </summary>
             <param name="_array">数组</param>
             <param name="_begin"></param>
             <param name="_splite"></param>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.clean">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             清空
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The ToString
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.data.TagTree.updateSetup(System.Object,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="context">The context<see cref="T:System.Object"/></param>
             <param name="write">The write<see cref="T:System.Boolean"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle.mAddress">
            设备地址
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.#ctor(System.Object)">
            <summary>
            初始化
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.Finalize">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.SetSelect(System.Int32)">
            <summary>
            选择设备
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.GetSelect">
            <summary>
            获取选中
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.Config(System.Object)">
            <summary>
            配置
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.Connect">
            <summary>
            连接设备
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.Disconnect">
            <summary>
            断开连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.IsConnected">
            <summary>
            是否连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.Scan(System.Boolean)">
            <summary>
            扫描
            </summary>
            <param name="onOff"></param>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.PortWrite(System.Byte[])">
            <summary>
            输出数据
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.PortRead(System.Byte[]@)">
            <summary>
            读取数据
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.SetupUpdate(System.Boolean)">
            <summary>
            保存设置
            </summary>
            <param name="write"></param>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.GetDevices">
            <summary>
            获取设备列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle.CheckBmwDataStream(System.Byte[])">
            <summary>
            检测特定数据
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.DEBUG_BLE">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.BLE_DATA_SIZE">
            BLE数据包大小
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.BLE_WRITE_DELAY">
            写数据延时
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.REQUEST_ENABLE_BT">
            打开蓝牙对话框ID
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.MSG_BLE_DEVICE_UPDATE">
            消息
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.USE_BLE_PACKAGE">
            数据打包
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.USE_BLE_LOCK_UNLOCK">
            数据加密
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.BUFFER_SIZE">
            缓冲区大小
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.mIsConnected">
            是否连接标志
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBleAndroid.mIsCharWriteDone">
            写数据
        </member>
        <member name="T:RfidLib.Port.Ble.IBleDeviceEvent">
            =================================================================================================================
             <summary>
             蓝牙消息处理
             </summary>
            =================================================================================================================
        </member>
        <member name="M:RfidLib.Port.Ble.IBleDeviceEvent.OnBleEvent(RfidLib.Port.Ble.XBleDevice,RfidLib.Port.Ble.XBleEventType,System.Byte[],System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             蓝牙设备 - 消息
             </summary>
             <param name="device">设备</param>
             <param name="type">消息</param>
             <param name="data">数据</param>
             <param name="message">对象</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Ble.XBleEventType">
            =================================================================================================================
             <summary>
             消息类型
             </summary>
            =================================================================================================================
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_ERROR">
               错误
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_MESSAGE">
               消息
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_SCAN_START">
               扫描-开始
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_SCAN_UPDATE">
               扫描-更新
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_SCAN_STOP">
               扫描-停止
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_SCAN_DONE">
               扫描-完成
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_CONNECTING">
               连接中
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_CONNECTED">
               已连接
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_DISCONNECTING">
               断开中
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_DISCONNECTED">
               已断开
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_FOUND_DEVICE">
               发现设备
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_FOUND_SERVICE">
               发现服务
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_FOUND_CHARACTOR">
               发现特征
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_NOTIFY_CHARACTOR">
               打开通知
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_RECEIVED">
               收数据
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_NO_DEVICE">
               无设备
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_NO_SERVICE">
               无服务
        </member>
        <member name="F:RfidLib.Port.Ble.XBleEventType.BLE_EVENT_NO_CHARACT">
               无特征
        </member>
        <member name="T:RfidLib.Port.Ble.XBleDevice">
            =============================================================================================================
             <summary>
             蓝牙设备<see cref="T:RfidLib.Port.Ble.XBleDevice" />
             </summary>
            =============================================================================================================
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.ERROR_MAX">
            错误次数
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.CurrentDeviceMac">
            存储检测的 - 设备地址。
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.CurrentDevice">
            存储检测到的 - 当前设备。
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.CurrentService">
             存储检测到的 - 当前服务。
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.CurrentWriteChar">
             存储检测到的 - 写特征对象。
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.CurrentNotifyChar">
             存储检测到的 - 通知特征对象。
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.GuidService">
             当前设备 - 服务号
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.GuidWriteChar">
             写特征编号
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.GuidNotifyChar">
             通知编号
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.IsConnected">
            连接成功
        </member>
        <member name="P:RfidLib.Port.Ble.XBleDevice.IsSynced">
            同步通知
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.asyncLock">
            同步锁定
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.watcher">
            设备监视器
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.even">
            消息接口
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.ListId">
            设备列表
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.ListName">
            名称列表
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.AutoConnect">
            自动连接
        </member>
        <member name="F:RfidLib.Port.Ble.XBleDevice.errorCount">
            错误次数
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.#ctor(System.String,System.String,System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="guidService">服务号<see cref="T:System.String"/></param>
             <param name="guidWriteChar">输出特征号<see cref="T:System.String"/></param>
             <param name="guidNotifyChar">通知特征号<see cref="T:System.String"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Finalize">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.SetEven(RfidLib.Port.Ble.IBleDeviceEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 消息接口
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.WatchStartStop(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             启动 - 停止 - 扫描
             </summary>
             <param name="isStop"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Start">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             开始
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Stop">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             停止
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Watcher_Completed(Windows.Devices.Enumeration.DeviceWatcher,System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             完成
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Watcher_Stopped(Windows.Devices.Enumeration.DeviceWatcher,System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             停止 - 设备
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Watcher_Added(Windows.Devices.Enumeration.DeviceWatcher,Windows.Devices.Enumeration.DeviceInformation)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             添加 - 设备
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Watcher_Updated(Windows.Devices.Enumeration.DeviceWatcher,Windows.Devices.Enumeration.DeviceInformationUpdate)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设备
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Watcher_Removed(Windows.Devices.Enumeration.DeviceWatcher,Windows.Devices.Enumeration.DeviceInformationUpdate)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             删除设备
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.FindDeviceById(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             按MAC地址直接组装设备ID查找设备
             </summary>
             <param name="mac">设备地址</param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Matching(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             匹配设备
             </summary>
             <param name="id"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接设备
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Dispose">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             主动断开连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.OnConnection_StatusChanged(Windows.Devices.Bluetooth.BluetoothLEDevice,System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接状态改变之接口
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.FindService(Windows.Devices.Bluetooth.BluetoothLEDevice)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             按 GUID 查找主服务
             </summary>
             <param name="dev">The dev<see cref="T:Windows.Devices.Bluetooth.BluetoothLEDevice"/></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.FindWriteChar(Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置写特征对象。
             </summary>
             <param name="srv">The service<see cref="T:Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService"/></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.FindNotifyChar(Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置通知特征对象。
             </summary>
             <param name="srv">The service<see cref="T:Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService"/></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.EnableNotifications(Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置特征对象为接收通知对象
             </summary>
             <param name="c"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.OnCharacteristic_ValueChanged(Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic,Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             内容改变
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.XBleDevice.Write(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Ble.ManagerBle_UWP">
            =================================================================================================================
             <summary>
             电脑蓝牙
             </summary>
            =================================================================================================================
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.USE_BLE_LOCK_UNLOCK">
            加密
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.UUID_XXX_BASE">
            ==============================================================================================
            
               CC2541 透传模块
            
            ==============================================================================================
             标准结尾
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.UUID_UART_SERVICE">
            串口服务
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.UUID_UART_TX_CHARACT">
            输出特性
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.UUID_UART_RX_CHARACT">
            输入特性
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.tab_dolock">
            加密 - 转换表
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.tab_unlock">
            解密 - 转换表
        </member>
        <member name="F:RfidLib.Port.Ble.ManagerBle_UWP.bleDevice">
            蓝牙对象
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.Make_dolock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             加密
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.Make_unlock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解密
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化 - 实例
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 设备列表
             </summary>
             <returns>列表</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.SetSelect(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 选择
             </summary>
             <param name="n">xuhao</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             是否连上
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.Scan(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             扫描蓝牙设备
             </summary>
             <param name="onOff"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口写数据
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.PortRead(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口读取 / 另一种方式是注册接收接口!
             </summary>
             <param name="a"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.ManagerBle_UWP.OnBleEvent(RfidLib.Port.Ble.XBleDevice,RfidLib.Port.Ble.XBleEventType,System.Byte[],System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             蓝牙消息处理
             </summary>
             <param name="device">设备</param>
             <param name="type">类型</param>
             <param name="data">数据</param>
             <param name="message">消息</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Ble.PortBle">
            -------------------------------------------------------------------------------------------------------------
             蓝牙端口
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Ble.PortBle.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.PortBle.DEBUG_BLE">
            调试
        </member>
        <member name="F:RfidLib.Port.Ble.PortBle.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Ble.PortBle.manager">
            管理器
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="context">上下文</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             消息接口
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The SetStream
             </summary>
             <param name="e">The stream<see cref="T:RfidLib.Port.IPortStream"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.Init(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化权限
             </summary>
             <param name="activity">The activity<see cref="T:System.Object"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             是否连接
             </summary>
             <returns>The <see cref="T:System.Boolean"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发数据
             </summary>
             <param name="data">The data<see cref="T:System.Byte"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Ble.PortBle.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置数据
             </summary>
             <param name="write">The write<see cref="T:System.Boolean"/></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.ManagerBase">
            <summary>
            设备 - 管理器
            </summary>
        </member>
        <member name="F:RfidLib.Port.ManagerBase.mContext">
               上下文
        </member>
        <member name="F:RfidLib.Port.ManagerBase.mSelect">
               未选择
        </member>
        <member name="F:RfidLib.Port.ManagerBase.mEvent">
               端口消息
        </member>
        <member name="F:RfidLib.Port.ManagerBase.mStream">
               数据消息
        </member>
        <member name="M:RfidLib.Port.ManagerBase.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 消息接口
             </summary>
             <param name="ev">监听</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 流接口
             </summary>
             <param name="ps">流接口</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 设备列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.SetSelect(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置选择
             </summary>
             <param name="n"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.GetSelect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取选中
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.Config(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             配置管理器
             </summary>
             <param name="obj"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接设备
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开设备
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接上
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.Scan(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             扫描 - (不是必须的)
             </summary>
             <param name="onOff"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.PortRead(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读取数据
             </summary>
             <param name="a"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.ManagerBase.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 保存 (不是必须的)
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.PortEvenType">
            ================================================================================================================
            <summary>
            端口消息类型
            </summary>
            ================================================================================================================
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_ERROR">
            错误 
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_UNKNOW">
            未知
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_POWER_OFF">
            关机
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_POWER_ON">
            开机
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_SCAN_START">
            扫描 - 开始
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_SCANNING">
            扫描 - 中
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_SCAN_UPDATE">
            扫描 - 更新
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_SCAN_FAILED">
            扫描 - 失败
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_SCAN_DONE">
            扫描 - 完成
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_CONFIG">
            配置 
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_CONNECTING">
            连接中
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_CONNECTED">
            已连接
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_CONNECT_FAILED">
            连接失败
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_DISCONNECTING">
            断开中
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_DISCONNECTED">
            断开连接
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_DISCONNECT_FAILED">
            断开失败
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_FIND_DEVICE">
            找到设备
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_NO_DEVICE">
            找到设备
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_FIND_SEVICE">
            找到服务
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_NO_SERVICE">
            无服务
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_FIND_CHARACT">
            找到服务
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_NO_CHARACT">
            无服务
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_NOTIFY_CHARACT">
            找到服务
        </member>
        <member name="F:RfidLib.Port.PortEvenType.PORT_EVENT_MESSAGE">
            消息
        </member>
        <member name="T:RfidLib.Port.PortBase">
            ================================================================================================================
            端口父类
            ================================================================================================================
        </member>
        <member name="F:RfidLib.Port.PortBase.mType">
            * 类型
        </member>
        <member name="F:RfidLib.Port.PortBase.mName">
            * 名称
        </member>
        <member name="F:RfidLib.Port.PortBase.mEvent">
            * 消息 - 接口
        </member>
        <member name="F:RfidLib.Port.PortBase.mStream">
            * 数据 - 接口
        </member>
        <member name="F:RfidLib.Port.PortBase.mContext">
            * 上下文
        </member>
        <member name="M:RfidLib.Port.PortBase.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造接口
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.GetPortType">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取类型
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.GetName">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取名称 
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置消息
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置数据流
             </summary>
             <param name="stream"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取设备列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.Init(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化 - 关联到界面,申请权限使用!
             </summary>
             <param name="activity"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.Connect">
            -------------------------------------------------------------------------------------------------------------
             * 连接
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             * 断开
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             * 是否连接
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortBase.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.IPortEvent">
            <summary>
            接口消息
            </summary>
        </member>
        <member name="M:RfidLib.Port.IPortEvent.OnPortEvent(RfidLib.Port.EPortType,RfidLib.Port.PortEvenType,System.Object,System.String)">
            <summary>
            端口 - 消息
            </summary>
            <param name="type">接口类型 (PORT_UART/PORT_BLE/PORT_USB/PORT_UDP/PORT_TCP)</param>
            <param name="param">接口状态 (SCAN/CONNECT/POWER/ERROR)</param>
            <param name="device">接口设备 (device/error) (working/done/success/failed/error)</param>
            <param name="message">设备消息 (message)</param>
        </member>
        <member name="T:RfidLib.Port.PortManager">
            <summary>
            端口管理器
            -- 主要类
            </summary>
        </member>
        <member name="F:RfidLib.Port.PortManager.DEBUG">
               调试
        </member>
        <member name="F:RfidLib.Port.PortManager.list">
               接口列表
        </member>
        <member name="F:RfidLib.Port.PortManager.deviceType">
            * 默认接口
        </member>
        <member name="M:RfidLib.Port.PortManager.#ctor(System.Object,RfidLib.Port.EPortType)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造接口类
             </summary>
             <param name="context"></param>
             <param name="type"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.SetType(RfidLib.Port.EPortType)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置类别
             </summary>
             <param name="type"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetPortType">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口类型
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetPort">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetPort(RfidLib.Port.EPortType)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <param name="type">类型</param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.SetPortEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置端口消息
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.SetPortStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置数据接口
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetBleManager">
            -------------------------------------------------------------------------------------------------------------
                获取管理器
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetUdpManager">
            -------------------------------------------------------------------------------------------------------------
                获取管理器
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetTcpManager">
            -------------------------------------------------------------------------------------------------------------
                获取管理器
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetUartManager">
            -------------------------------------------------------------------------------------------------------------
                获取管理器
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.GetUsbManager">
            -------------------------------------------------------------------------------------------------------------
                获取管理器
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             链接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             是否连接
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             写数据
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读写设置
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.PortManager.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新数据
             </summary>
             <param name="set"></param>
             <exception cref="T:System.NotImplementedException"></exception>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.IPortMessage">
            <summary>
            端口消息
            </summary>
        </member>
        <member name="M:RfidLib.Port.IPortMessage.OnPortMessage(System.Int32,System.Object)">
            <summary>
            消息
            </summary>
            <param name="msg">The msg<see cref="T:System.Int32"/></param>
            <param name="param">The param<see cref="T:System.Object"/></param>
        </member>
        <member name="T:RfidLib.Port.IPortStream">
            <summary>
            端口类
            </summary>
        </member>
        <member name="M:RfidLib.Port.IPortStream.OnReceive(System.Byte[])">
            <summary>
            接收
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:RfidLib.Port.IPortStream.OnSended(System.Byte[])">
            <summary>
            发送
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="T:RfidLib.Port.EPortType">
            <summary>
            端口类型 (Port Type)
            </summary>
        </member>
        <member name="F:RfidLib.Port.EPortType.PORT_TYPE_UART">
            <summary>
            串口 (UART)
            </summary>
        </member>
        <member name="F:RfidLib.Port.EPortType.PORT_TYPE_BLE">
            <summary>
            蓝牙 (BLE)
            </summary>
        </member>
        <member name="F:RfidLib.Port.EPortType.PORT_TYPE_UDP">
            <summary>
            网络 (UDP)
            </summary>
        </member>
        <member name="F:RfidLib.Port.EPortType.PORT_TYPE_TCP">
            <summary>
            网络 (TCP) 
            </summary>
        </member>
        <member name="F:RfidLib.Port.EPortType.PORT_TYPE_USB">
            <summary>
            通用串行总线 (USB)
            </summary>
        </member>
        <member name="T:RfidLib.Port.Tcp.ManagerTcp">
            <summary>
            网络接口
            </summary>
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.TAG">
             目标
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.DEBUG">
             调试
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.DEBUG_THIS">
            调试数据
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.TCP_BUFFER_SIZE">
             缓存
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.DEFAULT_TCP_PORT">
            * 接口
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.DEFAULT_TCP_HOST">
            * 主机
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.mHost">
             目标
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.mPort">
             端口
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.tcpClient">
            客户端
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.stream">
            数据流
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.mTcpThread">
             读取线程
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.USE_TCP_LOCK_UNLOCK">
            ---------------------------
              加密开关 (龙坤的加密)
            ---------------------------
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.TabDolock">
             底层加密
        </member>
        <member name="F:RfidLib.Port.Tcp.ManagerTcp.TabUnlock">
             解密转换表
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Make_dolock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             锁定
             </summary>
             <param name="array">数据</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Make_unlock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解码
             </summary>
             <param name="array">数据</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造对象
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Finalize">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放对象
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.SetHost(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置地址
             </summary>
             <param name="host"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.GetHost">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取地址
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.SetPort(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置端口
             </summary>
             <param name="port"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.GetPort">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接好
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Scan(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             扫描
             </summary>
             <param name="onOff"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Release">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接网络
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开网络
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.PortRead(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口读取
             </summary>
             <param name="a"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.ManagerTcp.ThreadRunRead(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读取线程
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Tcp.PortTcp.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Tcp.PortTcp.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Tcp.PortTcp.manager">
            管理器
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造接口
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置消息接口
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置流接口
             </summary>
             <param name="stream"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.config(System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="host"></param>
             <param name="port"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.Release">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.Init(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="activity"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接成功
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Tcp.PortTcp.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读写数据
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart.Baudrate">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             波特率
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart.Device">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             路径
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.Config(System.String,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             配置
             </summary>
             <param name="device">设备</param>
             <param name="baudrate">波特率</param>
             <param name="flags">属性</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取设备列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.SetSelect(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             选择设备
             </summary>
             <param name="n"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接设备
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接上
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.Scan(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             扫描设备
             </summary>
             <param name="onOff"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口
             </summary>
             <param name="a"></param>
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.GetStream">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取流数据
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Uart.ManagerUart_UWP">
            -----------------------------------------------------------------------------------------------------------------
             <summary>
             串口模块
             </summary>
            -----------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.DEBUG">
             调试
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.DEBUG_THIS">
            调试
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.USE_UART_LOCK_UNLOCK">
            加密开关(龙坤使用加密)
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.portName">
             端口名称
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.portBaudrate">
             波特率
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.sport">
             串口
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.TabDolock">
             加密
        </member>
        <member name="F:RfidLib.Port.Uart.ManagerUart_UWP.TabUnlock">
            * 解密
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.make_dolock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             加密
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.make_unlock(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解密
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造函数
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Config(System.String,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             配置设备
             </summary>
             <param name="device"></param>
             <param name="baudrate"></param>
             <param name="flags"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Scan(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             扫描
             </summary>
             <param name="onOff"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取设备
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.SetSelect(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             选择
             </summary>
             <param name="n"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Sport_PinChanged(System.Object,System.IO.Ports.SerialPinChangedEventArgs)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             脚位改变
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Sport_ErrorRecived(System.Object,System.IO.Ports.SerialErrorReceivedEventArgs)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             错误
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.Sport_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             接收数据
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             写数据
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.ManagerUart_UWP.PortRead(System.Byte[]@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
                读数据
             </summary>
             <param name="a"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Uart.PortUart">
            <summary>
            串口接口
            </summary>
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.DEBUG">
             全局调试
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.DEBUG_UART">
             本地调试
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.TAG">
             目标
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.DEFAULT_BAUDRATE">
             默认 - 波特率
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.manager">
            -------------------------------------------------------------------------------------------------------------
                局部变量
            -------------------------------------------------------------------------------------------------------------
             管理器
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.mPort">
            * 端口号(多个串口时使用)
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.mBaudrate">
            * 波特率
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.TabDolock">
            加密转换表
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.TabUnlock">
            解密转换表
        </member>
        <member name="F:RfidLib.Port.Uart.PortUart.getDevices">
            设备
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.Make_dolock(System.Byte[]@)">
             加密
            
             @param array : 数据
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.Make_unlock(System.Byte[]@)">
             解密
            
             @param array : 数据
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SetPort(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The SetPort
             </summary>
             <param name="port"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.GetPort">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SetBaudrate(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置波特率
             </summary>
             <param name="baudrate">波特率</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.GetBaudrate">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取波特率
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置消息接口
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置流程
             </summary>
             <param name="stream"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化对象<see cref="T:RfidLib.Port.Uart.PortUart"/> class.
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取设备 
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.Config(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             配置串口
             </summary>
             <param name="index"></param>
             <param name="baudrate"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             是否连接
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.RunReadPolling(System.Object)">
            -------------------------------------------------------------------------------------------------------------        
             <summary>
             接收线程
             </summary>
             <param name="obj"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Uart.PortUart.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.Port.Udp.ManagerUdp.mUdpSocket">
            套接字
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.#ctor(System.Object)">
            =============================================================================================================
             <summary>
             构造函数
             </summary>
             <param name="context"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.Finalize">
            =============================================================================================================
             <summary>
             析构函数
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.SetHost(System.String)">
            =============================================================================================================
             <summary>
             
             </summary>
             <param name="host"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.SetPort(System.Int32)">
            =============================================================================================================
             <summary>
             
             </summary>
             <param name="port"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.GetPort">
            =============================================================================================================
             <summary>
             
             </summary>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.IsConnected">
            =============================================================================================================
             <summary>
             连接成功
             </summary>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.Connect">
            =============================================================================================================
             <summary>
             连接
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.Disconnect">
            =============================================================================================================
             <summary>
             断开连接
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.PortWrite(System.Byte[])">
            =============================================================================================================
             <summary>
             端口输出
             </summary>
             <param name="data"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.PortWrite(System.String,System.Int32,System.Byte[])">
            =============================================================================================================
             <summary>
             发送数据
             </summary>
             <param name="addr"></param>
             <param name="port"></param>
             <param name="array"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.SetupUpdate(System.Boolean)">
            =============================================================================================================
             <summary>
             更新设置
             </summary>
             <param name="write"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Udp.ManagerUdp.RunReadPolling(System.Object)">
            =============================================================================================================
             <summary>
             读取数据
             </summary>
             <param name="obj"></param>
            =============================================================================================================
        </member>
        <member name="F:RfidLib.Port.Udp.PortUdp.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.Port.Udp.PortUdp.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Udp.PortUdp.manager">
            UDP接口
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置接口
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.Init(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="activity"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.Config(System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="host"></param>
             <param name="port"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.Release">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放数据
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.Connect">
            连接
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.Disconnect">
            断开
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读写数据
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Udp.PortUdp.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.Port.Usb.ManagerUsb">
            <summary>
            USB管理器
            </summary>
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb.TAG">
            目标
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb.HID_REPORT_SIZE">
            HID数据报文长度:64
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb.pipeOut">
            输出
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.Config(System.Int32,System.Int32)">
             初始化管理器
            
             @param context : 上下文
             @param vid     : 企业号
             @param pid     : 产品号
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.makeChecksum(System.Byte[],System.Int32,System.Int32)">
            <summary>
            检测校验码
            </summary>
            <param name="array"></param>
            <param name="from"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.GetDevices">
            <summary>
            获取设备
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.SetSelect(System.Int32)">
            <summary>
            选中设备
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.Connect">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.Disconnect">
            <summary>
            断开
            </summary>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.IsConnected">
            <summary>
            是否连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb.PortWrite(System.Byte[])">
            <summary>
            写入数据
            </summary>
            <param name="a"></param>
        </member>
        <member name="T:RfidLib.Port.Usb.TheDevice">
            =================================================================================================================
             默认设备定义
            =================================================================================================================
        </member>
        <member name="T:RfidLib.Port.Usb.IHidDeviceEvent">
            =================================================================================================================
             消息处理
            =================================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.IHidDeviceEvent.OnHidEvent(RfidLib.Port.Usb.XHidDevice,RfidLib.Port.Usb.HidEventType,System.Byte[],System.Object)">
            <summary>
            hid设备消息
            </summary>
            <param name="device">设备</param>
            <param name="type">消息</param>
            <param name="data">数据</param>
            <param name="message">对象</param>
        </member>
        <member name="T:RfidLib.Port.Usb.HidEventType">
            =================================================================================================================
             消息类型
            =================================================================================================================
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_SCAN_START">
               扫描开始
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_SCAN_UPDATE">
               扫描更新
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_SCAN_STOP">
               扫描停止
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_SCAN_DONE">
               扫描完成
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_CONNECTED">
               连接
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_DISCONNECTED">
               断开
        </member>
        <member name="F:RfidLib.Port.Usb.HidEventType.HID_EVENT_RECEIVED">
               收数据
        </member>
        <member name="T:RfidLib.Port.Usb.XHidDevice">
            =================================================================================================================
             自定义人机设备接口
            =================================================================================================================
        </member>
        <member name="F:RfidLib.Port.Usb.XHidDevice.deviceWatcher">
            监视器
        </member>
        <member name="F:RfidLib.Port.Usb.XHidDevice.device">
            当前设备
        </member>
        <member name="F:RfidLib.Port.Usb.XHidDevice.listIds">
            设备列表
        </member>
        <member name="F:RfidLib.Port.Usb.XHidDevice.even">
            消息接口
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.#ctor">
            =============================================================================================================
             构造函数
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Finalize">
            =============================================================================================================
             析构函数
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.SetEven(RfidLib.Port.Usb.IHidDeviceEvent)">
            =============================================================================================================
             <summary>
             设置消息接口
             </summary>
             <param name="e"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Start">
            =============================================================================================================
             <summary>
             开始扫描
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Stop">
            =============================================================================================================
             <summary>
              停止扫描
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.OnDevice_Removed(Windows.Devices.Enumeration.DeviceWatcher,Windows.Devices.Enumeration.DeviceInformationUpdate)">
            =============================================================================================================
             <summary>
             删除
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.OnDevice_Added(Windows.Devices.Enumeration.DeviceWatcher,Windows.Devices.Enumeration.DeviceInformation)">
            =============================================================================================================
             <summary>
             添加设备
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.OnDevice_EnumerationComplete(Windows.Devices.Enumeration.DeviceWatcher,System.Object)">
            =============================================================================================================
             <summary>
             扫描完成
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            =============================================================================================================
        </member>
        <member name="P:RfidLib.Port.Usb.XHidDevice.IsConnected">
            =============================================================================================================
             <summary>
             是否连接
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Connect(System.Int32)">
            =============================================================================================================
             <summary>
             选择设备
             </summary>
             <param name="n"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Disconnect">
            =============================================================================================================
             <summary>
             断开连接
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.Device_OnInputReport_Received(Windows.Devices.HumanInterfaceDevice.HidDevice,Windows.Devices.HumanInterfaceDevice.HidInputReportReceivedEventArgs)">
            =============================================================================================================
             <summary>
             接收到数据
             </summary>
             <param name="sender"></param>
             <param name="args"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.PutData(System.Byte[])">
            =============================================================================================================
             <summary>
             输出数据包 (注意:收发的数据包都固定64字节)
             </summary>
             <param name="data"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.XHidDevice.GetDevices">
            =============================================================================================================
             <summary>
             获取设备列表
             </summary>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="T:RfidLib.Port.Usb.ManagerUsb_UWP">
            =================================================================================================================
             USB设备管理器
            =================================================================================================================
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb_UWP.DEBUG">
            * 调试
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb_UWP.DEBUG_USB">
            * 调试
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb_UWP.TAG">
            * 目标
        </member>
        <member name="F:RfidLib.Port.Usb.ManagerUsb_UWP.hid">
            * 设备
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Make_checksum(System.Byte[],System.Int32)">
            =============================================================================================================
            	函数:	make_checksum
            	参数:
            	返回:
            	说明:	生成校验码
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.From_package(System.Byte[],System.Int32,System.Byte[]@)">
            =============================================================================================================
            	函数:	from_package
            	参数:
            	返回:
            	说明:
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.To_package(System.Byte[],System.Int32,System.Int32,System.Byte[]@)">
            =============================================================================================================
            	函数:	to_package
            	参数:
            	返回:
            	说明:
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Config(System.Int32,System.Int32)">
            =============================================================================================================
             <summary>
             USB - HID 管理器
             </summary>
             <param name="vid"></param>
             <param name="pid"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.#ctor(System.Object)">
            =============================================================================================================
             <summary>
             初始化
             </summary>
             <param name="context"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Finalize">
            =============================================================================================================
             释放数据
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.OnHidEvent(RfidLib.Port.Usb.XHidDevice,RfidLib.Port.Usb.HidEventType,System.Byte[],System.Object)">
            =============================================================================================================
             <summary>
             端口消息
             </summary>
             <param name="device">设备</param>
             <param name="type">类型</param>
             <param name="data">数据</param>
             <param name="message">消息</param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Scan(System.Boolean)">
            =============================================================================================================
             <summary>
             扫描
             </summary>
             <param name="onOff"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.GetDevices">
            =============================================================================================================
             <summary>
             获取设备列表
             </summary>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.SetSelect(System.Int32)">
            =============================================================================================================
             <summary>
             选择设备
             </summary>
             <param name="n"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Connect">
            =============================================================================================================
             <summary>
             连接设备
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.Disconnect">
            =============================================================================================================
             <summary>
             断开连接
             </summary>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.IsConnected">
            =============================================================================================================
             <summary>
             连接上
             </summary>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.PortWrite(System.Byte[])">
            =============================================================================================================
             <summary>
             写数据
             </summary>
             <param name="dat"></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.Port.Usb.ManagerUsb_UWP.PortRead(System.Byte[]@)">
            =============================================================================================================
             <summary>
             读取
             </summary>
             <param name="a"></param>
             <returns></returns>
            =============================================================================================================
        </member>
        <member name="F:RfidLib.Port.Usb.PortUsb.DEBUG_USB">
             调试数据
        </member>
        <member name="F:RfidLib.Port.Usb.PortUsb.TAG">
             目标
        </member>
        <member name="F:RfidLib.Port.Usb.PortUsb.manager">
               管理器
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.#ctor(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口
             </summary>
             <param name="context"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.SetPort(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置端口
             </summary>
             <param name="pos"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.GetPort">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.SetStream(RfidLib.Port.IPortStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置数据流
             </summary>
             <param name="stream"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.SetEvent(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.GetDevices">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取设备列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.GetManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取管理器 
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.Init(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化 
             </summary>
             <param name="activity"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.Connect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.Disconnect">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             断开
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.IsConnected">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             连接
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.SendData(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.Port.Usb.PortUsb.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The ToString
             </summary>
             <returns>The <see cref="T:System.String"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.RfidMatrix">
            <summary>
            读写器矩阵
            </summary>
        </member>
        <member name="F:RfidLib.RfidMatrix.list">
            读写器列表
        </member>
        <member name="F:RfidLib.RfidMatrix.evenRfid">
            消息接口
        </member>
        <member name="F:RfidLib.RfidMatrix.evenPort">
            端口
        </member>
        <member name="M:RfidLib.RfidMatrix.#ctor">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.setRfidEven(RfidLib.rfid.IRfidEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 消息接口
             </summary>
             <param name="e">消息接口</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.setPortEven(RfidLib.Port.IPortEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置 - 端口消息
             </summary>
             <param name="e"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.add(RfidLib.rfid.RfidSystem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             添加
             </summary>
             <param name="rs"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.remove(RfidLib.rfid.RfidSystem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             删除
             </summary>
             <param name="rs"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.clear">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             清空
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.getList">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.getTagList">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.OnRfidResponse(RfidLib.rfid.based.BaseReader,System.Int32,System.Int32,System.Byte[],System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             消息接口
             </summary>
             <param name="reader">读写器</param>
             <param name="type">类型</param>
             <param name="cmd">命令</param>
             <param name="param">参数</param>
             <param name="obj">附加</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.OnPortEvent(RfidLib.Port.EPortType,RfidLib.Port.PortEvenType,System.Object,System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口消息传递
             </summary>
             <param name="type">类型</param>
             <param name="param">参数</param>
             <param name="device">设备</param>
             <param name="message">消息</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.Start">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             开始
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.Stop">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             停止
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.SetupUpdate(System.Runtime.Remoting.Contexts.Context,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.RfidMatrix.Main">
            <summary>
            测试代码
            </summary>
        </member>
        <member name="T:RfidLib.rfid.RfidSystem">
            =================================================================================================================
             <summary>
             简易系统
             </summary>
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.DEBUG_LOCAL">
            本地调试
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.TAG">
            目标
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.PfSystemInit">
            初始化
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.rfidManager">
            标签管理器
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.portManager">
            端口管理器
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.isInit">
            初始化完成
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.isPause">
            暂停
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.isRunning">
            运行状态 (是否发指令,开关)
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.antennaDelay">
            切换延时
        </member>
        <member name="F:RfidLib.rfid.RfidSystem.thread">
            线程
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.#ctor(RfidLib.Port.EPortType,RfidLib.rfid.based.EReaderType,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化系统
             </summary>
            <param name="ePortType">端口类型</param>
             <param name="eReaderType">读写器类型</param>
             <param name="channel">通道数</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.#ctor(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出给js调用
             </summary>
            <param name="portType">端口类型</param>
             <param name="readerType">读写器类型</param>
             <param name="channel">通道数</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.PortWrite(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出命令
             </summary>
             <param name="cmd">命令流</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.PortWrite(System.Byte[],System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出，并且等待
             </summary>
             <param name="cmd">命令</param>
             <param name="delay">等待时间</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Init(RfidLib.Port.EPortType,RfidLib.rfid.based.EReaderType,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
            <param name="ePortType"></param>
             <param name="eReaderType"></param>
             <param name="channel"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Start">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             开始 - 轮询
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Stop">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             停止 - 轮询
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Pause">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             暂停
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Resume">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             恢复
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.IsRunning">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             运行中
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.GetRfidManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取标签管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.GetPortManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口管理器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.RunLoop(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             循环处理
             </summary>
             <param name="obj"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新 
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.IsInit">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化过
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.SetInit(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置初始化
             </summary>
             <param name="b"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidSystem.Main">
            <summary>
            测试代码
            </summary>
        </member>
        <member name="T:RfidLib.rfid.based.BaseAnt">
            <summary>
            天线分类
            </summary>
        </member>
        <member name="F:RfidLib.rfid.based.BaseAnt.antId">
            天线号
        </member>
        <member name="F:RfidLib.rfid.based.BaseAnt.tags">
            标签列表
        </member>
        <member name="T:RfidLib.rfid.based.ITagEvent">
            <summary>
            标签消息接口
            </summary>
        </member>
        <member name="M:RfidLib.rfid.based.ITagEvent.OnRfidInventory(System.Int32,System.Int32,RfidLib.rfid.TagItem)">
            =============================================================================================================
             <summary>
             轮询 - 响应
             </summary>
             <param name="type">类型<see cref="T:System.Int32"/></param>
             <param name="cmd">命令<see cref="T:System.Int32"/></param>
             <param name="obj">对象<see cref="T:RfidLib.rfid.TagItem"/></param>
            =============================================================================================================
        </member>
        <member name="M:RfidLib.rfid.based.ITagEvent.OnRfidRead(System.Int32,System.Byte[],System.Byte[],System.Int32)">
            =============================================================================================================
             <summary>
             读取 - 响应
             </summary>
             <param name="bank">区域<see cref="T:System.Int32"/></param>
             <param name="epc">标签<see cref="T:System.Byte"/></param>
             <param name="data">数据<see cref="T:System.Byte"/></param>
             <param name="pos">位置<see cref="T:System.Int32"/></param>
            =============================================================================================================
        </member>
        <member name="T:RfidLib.rfid.based.EReaderType">
            =============================================================================================================
             读写器类型
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_M100">
            * 使用Q/M100指令集
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_R2000">
            * 使用R2000指令集
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_J2000">
            * 使用J2000指令集
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_G2000">
            * 使用G2000指令集
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_PR9200">
            * 使用PR9200指令集
        </member>
        <member name="F:RfidLib.rfid.based.EReaderType.READER_TYPE_SLR5600">
            * 使用SLR5600指令集
        </member>
        <member name="T:RfidLib.rfid.based.TagConst">
            <summary>
            标签常量
            </summary>
        </member>
        <member name="T:RfidLib.rfid.based.TagConst.TID_ITEM">
            =============================================================================================================
             <summary>
             tid识别常量
             </summary>
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.TID_ITEM.classId">
            * (8 bits) Class Identify : E2
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.TID_ITEM.maskId">
            * (12 bits) vendor Identify :
            * NXP = 0x806
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.TID_ITEM.modelId">
            * (12 bits) Model Number
            * 0x890 = UCODE 7
            * 0x894 = UCODE 8
            * 0x994 = UCODE 8m
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.TID_ITEM.vendor">
            * 品牌名称
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.TID_ITEM.product">
            * 产品名称
        </member>
        <member name="M:RfidLib.rfid.based.TagConst.TID_ITEM.#ctor(System.String,System.String,System.Int32,System.Int32)">
            ---------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="vendor">供应商</param>
             <param name="product">产品</param>
             <param name="maskId">识别号</param>
             <param name="model">产品号</param>
            ---------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.based.TagConst.list">
            列表
        </member>
        <member name="M:RfidLib.rfid.based.TagConst.#ctor">
            -------------------------------------------------------------------------------------------------------------
             初始化
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.TagConst.getTagClass(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             判断品牌和型号
             </summary>
             <param name="tid">The tid<see cref="T:System.Byte"/></param>
             <returns>The <see cref="T:RfidLib.rfid.based.TagConst.TID_ITEM"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.based.FindResult">
            =================================================================================================================
             <summary>
             查询状态
             </summary>
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.FindResult.posHead">
             数据头
        </member>
        <member name="F:RfidLib.rfid.based.FindResult.posEnd">
             数据尾
        </member>
        <member name="F:RfidLib.rfid.based.FindResult.posLen">
             数据长度
        </member>
        <member name="T:RfidLib.rfid.based.BaseAck">
            =================================================================================================================
             <summary>
             应答基类
             </summary>
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.DEBUG">
            调试开关
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.RESPONSE_TYPE_ERROR">
            响应错误
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.RESPONSE_TYPE_COMMAND">
            命令类型
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.RESPONSE_TYPE_RESPONSE">
            响应类型
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.RESPONSE_TYPE_NOTIFY">
            通知类型
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.RESPONSE_TYPE_WARING">
            警告类型
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.errorCode">
            -------------------------------------------------------------------------------------------------------------
             局部变量
            -------------------------------------------------------------------------------------------------------------
             错误码
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.even">
            消息
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.tagEven">
            标签事件
        </member>
        <member name="F:RfidLib.rfid.based.BaseAck.reader">
            读写器
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.GetTagEvent">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 消息接口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.SetTagEvent(RfidLib.rfid.based.ITagEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置标签消息
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.SetEvent(RfidLib.rfid.IRfidEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The SetEvent
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.GetEvent">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取消息接口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.#ctor(RfidLib.rfid.based.BaseReader)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造接口
             </summary>
             <param name="reader"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.ConvertLocalToCommon(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             命令转换 (本地转功共用命令)
             </summary>
             <param name="cmd">本地命令</param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.Parser(System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解析数据
             </summary>
             <param name="cmd"></param>
             <param name="status"></param>
             <param name="param"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找数据包 
             </summary>
             <param name="pipe"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.CheckData(CommLib.bytes.DataPipe@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             檢測數據
             </summary>
             <param name="pipe"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseAck.CheckParser(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测分析数据包
             </summary>
             <param name="array"></param>
             <param name="start"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.based.BaseRegion">
            =================================================================================================================
             区域
            =================================================================================================================
        </member>
        <member name="T:RfidLib.rfid.based.BaseBank">
            =================================================================================================================
             区域
            =================================================================================================================
        </member>
        <member name="T:RfidLib.rfid.based.BaseCmd">
            基本命令
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_BEGIN">
            =============================================================================================================
            	虚拟指令
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_INIT">
            * 初始化
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_INVENTORY">
            * 盘存
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_STOP">
            * 停止盘存
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_READ">
            * 读取标签
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_WRITE">
            * 写入标签
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_LOCK">
            * 锁定标签
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_KILL">
            * 灭活标签
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_SET_POWER">
            * 设置功率
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_GET_POWER">
            * 设置功率
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_SET_ANTENNA">
            * 设置功率
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_SET_GPIO">
            * 设置端口
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_GET_GPIO">
            * 读取端口
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_SET_REGION">
            * 设置区域
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_GET_REGION">
            * 获取区域
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_SET_SELECT">
            * 设置选择
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_GET_SELECT">
            * 读取选择
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_CMD_ERROR">
            * 错误
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_REGION_UNKNOW">
            =============================================================================================================
             * 区域定义
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_SESSION_S0">
            =============================================================================================================
             * 目标
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_TARGET_A">
            =============================================================================================================
             * 目标状态(A/B)
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_TARGET_RFU1">
            * 目标选择
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_BANK_RFU">
            =============================================================================================================
             * 数据段
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_LOCK_USR">
            =============================================================================================================
             * 锁定区域
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_TYPE_FLASH_OPEN">
            =============================================================================================================
             * 锁定类型
            =============================================================================================================
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.RFID_BYTE_TO_BITS">
            * 字节转位
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.LastCmd">
             最后的命令
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.Bank">
            * 数据段
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.mAddress">
            * 设备地址(1~254,255是专用的PC)
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.mAccessPassword">
            * 访问密码
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.mKillPassword">
            * 灭活密码
        </member>
        <member name="F:RfidLib.rfid.based.BaseCmd.reader">
            * 关联的读写器
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.#ctor(RfidLib.rfid.based.BaseReader)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="reader"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.cmd_make_selParam(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成参数
             </summary>
             <param name="target">目标</param>
             <param name="action">动作</param>
             <param name="memBank">内存</param>
             <returns>选择参数</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.ToText(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             命令转文本
             </summary>
             <param name="cmd">命令</param>
             <returns>文本</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_init">
            =============================================================================================================
              RFID COMMON PORT
            =============================================================================================================
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_reset">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复位
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_inventory(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             轮询
             </summary>
             <param name="n"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_ninventory(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             轮询多标签
             </summary>
             <param name="n"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_stop">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             停止多标签轮询
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_select(System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置选择
             </summary>
             <param name="Bank"></param>
             <param name="Pos"></param>
             <param name="Mask"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_get_select">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取选择
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_read(System.Int32,System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读取
             </summary>
             <param name="Password">密码</param>
             <param name="Bank">区域</param>
             <param name="Pos">位置</param>
             <param name="Len">长度</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_write(System.Int32,System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             写入
             </summary>
             <param name="Password">密码</param>
             <param name="Bank">区域</param>
             <param name="Pos">位置</param>
             <param name="Data">数据</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_lock(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             锁定
             </summary>
             <param name="Password">密码</param>
             <param name="Bank">区域</param>
             <param name="LockType">类型</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_kill(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             灭活
             </summary>
             <param name="Password">灭活密码</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_tx_power(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置功率
             </summary>
             <param name="power"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_get_tx_power">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取功率
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_gpio(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             端口设置
             </summary>
             <param name="gpio">端口</param>
             <param name="hilo">高低</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_get_gpio(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取端口
             </summary>
             <param name="gpio"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_region(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置区域
             </summary>
             <param name="region"></param>
             <param name="minFreq"></param>
             <param name="maxFreq"></param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_get_region">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取区域
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_antenna(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置天线
             </summary>
             <param name="ant">天线</param>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_get_power_max">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取功率
             </summary>
             <returns>数据流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseCmd.rfid_set_region(System.Byte)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置区域
             </summary>
             <param name="v"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.based.BaseErr">
            错误
        </member>
        <member name="M:RfidLib.rfid.based.BaseErr.Format(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取错误消息
             </summary>
             <param name="error"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.based.BaseReader">
            <summary>
            读写器基类
            </summary>
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.DEBUG">
            * 调试
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.TAG">
            * 目标
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.type">
            * 读写器类型
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.name">
            * 名称
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.ack">
            * 应答
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.cmd">
            * 命令
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.err">
            * 错误
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.set">
            * 设置
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.antennas">
            * 天线(每一位对应)
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.antennaIndex">
            * 天线序号
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.channels">
            * 通道数
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.battery">
            * 电池
        </member>
        <member name="F:RfidLib.rfid.based.BaseReader.listAntenna">
            * 天线列表
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.getType">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取类型
             </summary>
             <returns>类型</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetName">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取名称
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.getCurAnt">
            -------------------------------------------------------------------------------------------------------------
             获取当前天线
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetChannels">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取通道数
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.SetChannels(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置通道数
             </summary>
             <param name="ch"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.CheckAntennas(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测天线
             </summary>
             <param name="ant"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetAntennas">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.SetAntennas(System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置天线
             </summary>
             <param name="ant"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.ResetAntenna">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复位
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetNextAntenna">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取天线
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetAntennaCount">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取天线数量
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.SetEvent(RfidLib.rfid.IRfidEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置消息接口
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetEvent">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取消息接口
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.CheckData(CommLib.bytes.DataPipe@)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测数据
             </summary>
             <param name="pipe"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetAck">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 应答
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetCmd">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 命令
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetSet">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 设置
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.GetErr">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 错误
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseReader.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新
             </summary>
             <param name="set"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.based.BaseSet">
            <summary>
            设置
            </summary>
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.sw_interval">
            * 多天线 - 休息时间 (0~2000 ms)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.inventory_times">
            * 轮询次数 (每次 1～255)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.scan_times">
            * 扫描次数 (每秒钟10次)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.antanna_switch_times">
            * 多天线 - 切换间隔 (多个天线切换,10次切换下一个)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.inventory_Q">
            * 2 ^ Q = 最大标签数量 10 -> 1024 / 9 - 512 / 8 - 256
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.tx_power">
            * 默认功率(0 ~ 33 dBm)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_onoff">
            * 会话 - 开关
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_mode">
            * 会话 - 模式
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_target">
            * 会话 - 目标
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_scan_time">
            * 扫描时间 (2秒钟 = 20 * 100ms)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_invert_enable">
            * 翻转开关 (一般是S1,S2,S3使用,S0不需要)
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.session_invert_number">
            * 翻转条件 - 无标签次数后
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.current_no_tag_count">
            * 无标签次数
        </member>
        <member name="F:RfidLib.rfid.based.BaseSet.current_target_set">
            目标
        </member>
        <member name="M:RfidLib.rfid.based.BaseSet.CheckData">
            -------------------------------------------------------------------------------------------------------------
             * 检测数据
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseSet.GetCurrentTarget">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取当前目标 
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseSet.InvertCurrentTarget">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             翻转 - 目标
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseSet.SetupReadWrite(System.Object,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             加载设置
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.based.BaseSet.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.cmds.IToStream">
            =================================================================================================================
             参数 - 流 (流出)
            =================================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.IToStream.ToStream">
            输出流
        </member>
        <member name="T:RfidLib.rfid.cmds.IFromStream">
            =================================================================================================================
             流 - 数据 (流入)
            =================================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.IFromStream.FromStream(CommLib.bytes.ByteStream)">
            源自流
        </member>
        <member name="T:RfidLib.rfid.cmds.CmdAckItem">
            =================================================================================================================
             命令，应答，一体
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdAckItem.Code">
               本地命令
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdAckItem.Comm">
               公用命令
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdAckItem.Name">
               描述
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdAckItem.Cmd">
               生成输出流
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdAckItem.Ack">
               输入流解析
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdAckItem.#ctor(System.Int32,System.Int32,System.String,RfidLib.rfid.cmds.IToStream,RfidLib.rfid.cmds.IFromStream)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造器
             </summary>
             <param name="code">命令</param>
             <param name="comm">共用</param>
             <param name="name">名称</param>
             <param name="cmd">命令</param>
             <param name="ack">数据</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.cmds.CmdIoBased">
            =================================================================================================================
             主类
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdIoBased.array">
               命令列表
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdIoBased.FindCmd(System.Int32)">
            =============================================================================================================
                查找命令
            =============================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdIoBased.MakeCmd(RfidLib.rfid.cmds.CmdAckItem)">
            =============================================================================================================
                执行命令
            =============================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdIoBased.Parser(System.Int32,System.Byte[])">
            =============================================================================================================
                解析数据
            =============================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdIoBased.ToComm(System.Int32)">
            =============================================================================================================
             编码转换
            =============================================================================================================
        </member>
        <member name="M:RfidLib.rfid.cmds.CmdIoBased.ToString(System.Int32)">
            =============================================================================================================
             解释命令
            =============================================================================================================
        </member>
        <member name="T:RfidLib.rfid.cmds.Cmd_M100_Inventory">
            =================================================================================================================
             命令 (参数)
            =================================================================================================================
        </member>
        <member name="T:RfidLib.rfid.cmds.CmdM100">
            =================================================================================================================
             主类
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdM100.arrayM100">
               命令列表
        </member>
        <member name="T:RfidLib.rfid.cmds.AckCmd_R2K_Inventory">
            =================================================================================================================
             应答
            =================================================================================================================
        </member>
        <member name="T:RfidLib.rfid.cmds.CmdR2K">
            =================================================================================================================
             主类
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.cmds.CmdR2K.arrayR2K">
               命令列表
        </member>
        <member name="M:RfidLib.rfid.g2000.RfidG2KReader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
             创建读写器
            
             @param event    : 消息接口
             @param channels : 通道数
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck">
            <summary>
            应答
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.DEBUG">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.DEBUG_ERROR">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.TAG">
            <summary>
            目标
            </summary>
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckPacket">
            打包
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckPacket.PacketParam">
            Bit7：数据包类型标志。
            0 – 本数据包所带信息为标签EPC号；
            1 – 本数据包所带信息为读取到的数据
            （读到数据的标签为上一包EPC号的标签）。
            Bit6 ~ Bit0：数据包序号。
            数据包序号范围从0～127。
            每执行一次混合询查，数据包序号都会重新从0开始，每上传一个数据包，数据包序号会自动加1，当数据包序号超过127，会重新从0开始。
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckPacket.Len">
            <summary>
            长度
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckPacket.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckPacket.Rssi">
            <summary>
            信号值
            </summary>
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData">
            epc数据
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData.Ant">
            <summary>
            天线
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData.Len">
            <summary>
            长度
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData.Rssi">
            <summary>
            信号值
            </summary>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KAck.AckEPCData.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckInventory">
            查询 - 返回值
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckReadWriteLockKill">
            读、写、锁、杀
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckSetting">
            设置 (Set、Get)
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.Ack6BInventory">
            6B标签数据
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KAck.AckNormal">
            普通 数据 (心跳包，等等,无用数据)
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.#ctor(RfidLib.rfid.based.BaseReader)">
             构造函数
            
             @param reader : 读写器
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
             检测数据 分包
            
             @param _pipe : 队列
             @param _len  : 长度
             @return : 有效长度
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.CheckParser(System.Byte[],System.Int32,System.Int32)">
             解析数据
            
             @param array : 数据
             @param start : 位置
             @param len   : 长度
             @return : 解析是否成功,返回结束位置!
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ConvertLocalToCommon(System.Int32)">
             转换到通用指令
            
             @param cmd : 本地命令
             @return ： 通用命令
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.Parser(System.Int32,System.Int32,System.Byte[])">
             全部应答集中处理
            
             @param cmd   : 命令
             @param param : 输入数据
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_6b_inventory(System.Int32,System.Byte[])">
             6B 标签查询
            
             @param status : 状态
             @param param  : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_6b_read_write_lock(System.Int32,System.Byte[])">
             6B 标签读/写/锁/杀
            
             @param status : 状态
             @param param  : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_user_password(System.Int32,System.Byte[])">
             获取自定义密码
            
             @param status : 状态
             @param param  : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_reader_power(System.Int32,System.Byte[])">
             读取功率
            
             @param status ： 状态
             @param param  ： 参数
             @return ： 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_return_loss(System.Int32,System.Byte[])">
             回波损耗
            
             @param status : 状态
             @param param  : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_rw_drm(System.Int32,System.Byte[])">
             读取 DRM 模式
            
             @param status : 状态
             @param param  : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_em4325_spi_data(System.Int32,System.Byte[])">
             获取数据
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_em4325_temp(System.Int32,System.Byte[])">
             获取温度
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_rw_profile_cmd(System.Int32,System.Byte[])">
             读写配置
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_rw_write_retry_tm(System.Int32,System.Byte[])">
            @param status
            @param param
            @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_write_power(System.Int32,System.Byte[])">
            @param status
            @param param
            @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_rw_work_mode(System.Int32,System.Byte[])">
            @param status
            @param param
            @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_work_mode(System.Int32,System.Byte[])">
             获取工作模式
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_buffer_count(System.Int32,System.Byte[])">
             获取缓冲
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_epc_tid_len(System.Int32,System.Byte[])">
             获取EPC,TID长度
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_sn(System.Int32,System.Byte[])">
             获取SN
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_gpio(System.Int32,System.Byte[])">
             获取端口
            
             @param status
             @param param
             @return
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_infomation(System.Int32,System.Byte[])">
             获取信息
            
             @param status ： 状态
             @param param  ： 参数
             @return ： 设置
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_normal(System.Int32,System.Byte[])">
             解析数据
            
             @param param ： 输入流
             @return ： 版本
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_reader_temperature(System.Int32,System.Byte[])">
             获取温度
            
             @param param : 参数
             @return : 温度
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_read_gpio_value(System.Byte[])">
             读取端口值
            
             @param param : 参数
             @return : 端口
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_get_read_protect(System.Int32,System.Byte[])">
             读取设置
            
             @param status ： 状态
             @param param  ： 参数
             @return ： 对象
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_inventory(System.Int32,System.Byte[])">
             存盘开始
            
             @param param : 参数
             @return : 盘存
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_read_epc_id(CommLib.bytes.ByteStream)">
             读取EPC_ID数据流
            
             @param bs ： 字节流
             @return ： 标签
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KAck.ack_read_write_lock_kill(System.Int32,System.Byte[])">
             读写锁定
            
             @param param : 参数
             @return : 读取数据
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.LIMIT_POWER_MAX">
            功率范围 (30dB)
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.BAUDRATE_115200">
            波特率
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.AntanaArray">
            天线值
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KCmd.J2KTarget">
            目标
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KCmd.J2KMask">
            掩码
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.J2KMask.Bank">
            区域
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.J2KMask.Addr">
            地址
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.J2KMask.Data">
            数据
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.selectMask">
            默认 - 掩码
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.selectEPC">
            默认的 - 选择EPC
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.INVENTORY_NORMAL">
            查询模式
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.mInventoryMode">
            默认模式
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KCmd.mAntana">
            天线
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.#ctor(RfidLib.rfid.based.BaseReader)">
             构造函数
            
             @param reader : 读写器
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.make_crc(System.Byte[],System.Int32,System.Int32)">
             校验码
             <p/>
             04FF211995
            
             @param array  ： 数据
             @param offset ： 定位
             @param len    ： 长度
             @return : 效验码
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.make_crc(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
             计算效验码
            
             @param pipe   ： 队列
             @param offset ： 偏移量
             @param len    ： 长度
             @return ： 效验码
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.j2000.RfidJ2KCmd.make_cmd(System.Byte,System.Byte,System.Byte[],System.Int32,System.Int32)" -->
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.make_cmd(System.Int32,System.Byte[])">
             生成命令(短版本)
            
             @param cmd   : 命令
             @param param : 参数
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.make_cmd(System.Int32)">
             短命令
            
             @param cmd : 命令
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.SelectSize(System.Int32)">
             尺寸计算
            
             @param l ：大小
             @return ： 新的大小
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.SelectPrefix(CommLib.bytes.ByteStream)">
             导入筛选头
            
             @param bs ： 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.SelectEndfix(CommLib.bytes.ByteStream)">
             筛选结尾
            
             @param bs ： 数据流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_reset">
             设备复位
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_uart_baudrate(System.Int32)">
             设置 - 波特率
            
             @param baud ： 波特率
             @return ：命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_infomation">
             获取 - 版本
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_reader_address(System.Int32)">
             设置读写器地址
            
             @param address : 地址(0~254)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_work_antenna(System.Int32)">
             设置读写器天线
            
             @param antenna : 天线 - 4通道模块：(0~3) / 8通道模块：(0~7)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_output_power(System.Int32)">
             设置 - 输出功率
            
             @param rf_power : 输出功率(0~33)单位dBm
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_output_power4(System.Int32,System.Int32,System.Int32,System.Int32)">
             设置 - 输出功率(4通道)
            
             @param power1 : 天线1功率(0~33)
             @param power2 : 天线2功率(0~33)
             @param power3 : 天线3功率(0~33)
             @param power4 : 天线4功率(0~33)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_output_power8(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             设置读写器天线输出功率(8通道)(耗时将超100mS)
            
             @param power1 : 天线1功率(0~33)
             @param power2 : 天线2功率(0~33)
             @param power3 : 天线3功率(0~33)
             @param power4 : 天线4功率(0~33)
             @param power5 : 天线5功率(0~33)
             @param power6 : 天线6功率(0~33)
             @param power7 : 天线7功率(0~33)
             @param power8 : 天线8功率(0~33)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_output_power16(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             多通道功率设置
            
             @param power1  : 天线1功率(0~33)
             @param power2  : 天线2功率(0~33)
             @param power3  : 天线3功率(0~33)
             @param power4  : 天线4功率(0~33)
             @param power5  : 天线5功率(0~33)
             @param power6  : 天线6功率(0~33)
             @param power7  : 天线7功率(0~33)
             @param power8  : 天线8功率(0~33)
             @param power9  : 天线9功率(0~33)
             @param power10 : 天线10功率(0~33)
             @param power11 : 天线11功率(0~33)
             @param power12 : 天线12功率(0~33)
             @param power13 : 天线13功率(0~33)
             @param power14 : 天线14功率(0~33)
             @param power15 : 天线15功率(0~33)
             @param power16 : 天线16功率(0~33)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_output_power">
             读取读写器天线输出功率
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_frequency_region(System.Int32,System.Int32,System.Int32)">
             设置频率范围
            
             @param region     : 射频范围(1-FCC,2-ETSO,3-CHN)
             @param start_freq : 起始频率
             @param end_freq   : 结束频率
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_beeper_mode(System.Int32)">
             设置蜂鸣器模式
            
             @param mode : 模式(0-安静,1-每次存盘响,2-每张标签响)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_reader_temperature">
             读取温度
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_read_gpio_value">
             读取端口值
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_write_gpio_value(System.Int32,System.Int32)">
             设置端口值
            
             @param Gpio  : 脚位(3,4)
             @param Value : 电平(0,1)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_ant_connection_detector(System.Int32)">
             设置天线连接检测
            
             @param onoff : 检测灵敏度(00,ndB)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_rf_link_profile(System.Int32)">
             设置联机配置文件
            
             @param ProfileID : 配置文件(0xD1~0xD3)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_rf_link_profile">
             获取配置
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_rf_port_return_loss">
             获取此频点当前工作天线端口的回波损耗值
            
             @return : 字节流
        </member>
        <!-- Badly formed XML comment ignored for member "F:RfidLib.rfid.j2000.RfidJ2KCmd.QVALUE_SEND_REPORT" -->
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_read(System.Int32,System.Byte,System.Byte,System.Byte)">
             读标签
            
             @param Password : 访问密码 (4字节密码)
             @param Bank     : 内存区域 (0-reseved,1-epc,2-tid,3-user)
             @param Offset   : 读取偏移地址(Word单位)(根据标签,一般2开始)
             @param Lenght   : 读取数据长度(Word单位)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_write(System.Int32,System.Byte,System.Byte,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param Bank     : 区域(0-reseved,1-epc,2-tid,3-user)
             @param Offset   : 偏移
             @param Data     : 数据
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_lock(System.Int32,System.Byte,System.Byte)">
             锁定
            
             @param PassWord : 密码 (4字节)
             @param Bank     : 内存 (1 - User,2 - TID,3 - EPC,4 - AccessPassword,5 - KillPassword)
             @param LockType : 锁定 (0-开放,1-锁定,2-永久开放,3-永久锁定)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_kill(System.Int32)">
             灭活
            
             @param KillPassword : 密码
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_block_write(System.Int32,System.Byte,System.Byte,System.Byte[])">
             块写
            
             @param Password ： 密码
             @param Bank     ： 区域
             @param Offset   ： 偏移量
             @param Data     ： 数据
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_block_erase(System.Int32,System.Byte,System.Byte,System.Byte)">
             块擦除
            
             @param Password ： 密码
             @param Bank     ： 区域
             @param Offset   ： 偏移
             @param Length   ： 长度
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_cust_write(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte[])">
             自定义写
            
             @param Password ： 密码
             @param Bank     ： 区域
             @param Offset   ： 偏移量
             @param Lenght   ： 长度
             @param Data     ： 数据
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_inventory_one">
             标签存盘
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_select(System.Byte[])">
             设置 EPC
            
             @param epc : epc
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_mask(System.Byte,System.Int16,System.Byte[])">
             设置掩码
            
             @param bank   : 区域
             @param offset : 位置
             @param data   : 数据
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_inventory_mix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             混合 - 查询读取一体实现
            
             @param QValue   ： 查询参数
             @param Session  ： 会话
                             **
             @param ReadBank ： 区域
             @param ReadAddr ： 地址
             @param ReadLen  ： 长度
                             **
             @param Password ： 密码
             @param Target   ： 目标
             @param Antana   ： 天线
             @param ScanTime ： 扫描时间
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_inventory_by_epc(System.Int32,System.Int32,System.Int32,System.Byte[])">
             指定EPC查询
            
             @param MatchType   ：类型
             @param MatchLen    ：长度
             @param MatchOffset ：偏移量
             @param MatchData   ：数据
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_real_inventory(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
             指定实时查询参数
            
             @param TagProtocol   ：协议
                                  0 – EPC C1G2 (ISO18000-6C) 标签。
                                  1 – ISO18000-6B标签。
             @param ReadPauseTime ：1个字节，读写器自动实时询查标签的间隔时间。
                                  0x00 – 10ms；
                                  0x01 – 20ms；
                                  0x02 – 30ms；
                                  0x03 – 50ms；
                                  0x04 – 100ms。
             @param FilterTime    ：标签过滤时间。以1s为单位，参数范围0～255s
             @param QValue        : 查询
             @param Session       ：会话
             @param AdrTID        ：地址
             @param LenTID        ：长度
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_set_inventory_mode(System.Byte,System.Byte[])">
             设置查询模式
            
             @param ReadMode ： 模式
                             0 – 应答模式。
                             1 – 自动实时询查模式。
                             2 – 带触发的自动实时询查模式（触发模式）。此模式下，当GPI1口的电平为低电平时，读写器才进行自动询查，GPI1口电平为高电平时，读写器处于待机模式。
                             3 – 带天线顺序的自动实时询查模式。可指定循环读取的天线顺序，天线顺序在参数AntOrder中指定
             @param AntOrder ： 天线
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_inventory_mode">
             获取设置
            
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.cmd_get_power">
             获取功率
            
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_get_power_max">
             获取最大功率
            
             @return ：功率
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_init">
             初始化
            
             @return ： 数据流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_reset">
             复位
            
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_inventory(System.Int32)">
             初始化
            
             @param n ：
             @return ： 指令流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_set_select(System.Int32,System.Int32,System.Byte[])">
             选择标签
            
             @param Bank : 区域
             @param Pos  : 位置
             @param Mask : 匹配数据
             @return : 数据流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KCmd.rfid_write(System.Int32,System.Int32,System.Int32,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param Bank     : 段位
             @param Pos      : 位置
             @param data     : 数据
             @return : 数据流
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KErr.Format(System.Int32)">
             格式
            
             @param code : 编码
             @return : 文本描述
        </member>
        <member name="T:RfidLib.rfid.j2000.RfidJ2KReader">
            <summary>
            Defines the <see cref="T:RfidLib.rfid.j2000.RfidJ2KReader" />
            </summary>
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KReader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
             创建读写器
            
             @param event    : 消息接口
             @param channels : 通道数
            <summary>
            Initializes a new instance of the <see cref="T:RfidLib.rfid.j2000.RfidJ2KReader"/> class.
            </summary>
            <param name="ev">The ev<see cref="T:RfidLib.rfid.based.ITagEvent"/></param>
            <param name="channels">The channels<see cref="T:System.Int32"/></param>
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KSet.region">
            区域
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KSet.freq_channel">
            频道
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KSet.times">
            每秒钟次数
        </member>
        <member name="F:RfidLib.rfid.j2000.RfidJ2KSet.PF_SETTING_REGION">
            设置名称
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KSet.setupLoad(System.Object)">
             加载设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.j2000.RfidJ2KSet.setupSave(System.Object)">
             保存设置
            
             @param context : 上下文
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.DEBUG">
            调试
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.DEBUG_ACK">
            应答
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.DEBUG_ERROR">
            错误
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.#ctor(RfidLib.rfid.based.BaseReader)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造函数
             </summary>
             <param name="reader"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测数据,新的算法.
             </summary>
             <param name="pipe"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.CheckParser(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测解析
             </summary>
             <param name="array">数据</param>
             <param name="start">位置</param>
             <param name="len">长度</param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ConvertLocalToCommon(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             转换命令 (本地转公共命令)
             </summary>
             <param name="cmd"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckVersion">
            版本
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckReadMem">
            读数据
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.AckReadMem.ul">
            长度 : pc + epc
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.AckReadMem.pc">
            协议
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.AckReadMem.epc">
            EPC
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Ack.AckReadMem.data">
            数据
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckWriteMem">
            写数据
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckParam">
            普通返回1字节
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckWParam">
            普通返回2字节
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Ack.AckSetting">
            可以把设置参数都统一
            1.功率
            2.区域
            3.频率
            4.....
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.Parser(System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             应答解析
             </summary>
             <param name="cmd"></param>
             <param name="status"></param>
             <param name="param"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Ack.ack_write_tag(System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Ack.ack_read_tag(System.Byte[])" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_lock_tag(System.Byte[])">
             响应锁定
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_kill_tag(System.Byte[])">
             解析灭活返回值
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_get_version(System.Byte[])">
             解析数据
            
             @param param : 数据流
             @return : 版本字符串
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_inventory(System.Byte[])">
             解析轮询
            
             @param param : 输入数据
             @return : 标签
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Ack.ack_get_query(System.Byte[])" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_get_tx_power(System.Byte[])">
             输出功率
            
             @param param : 输入数据
             @return ： 电源功率
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Ack.ack_get_rx_param(System.Byte[])" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_get_select(System.Byte[])">
             获取选中参数
            
             @param param : 参数
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Ack.ack_normal(System.Byte[])">
             普通响应
            
             @param param : 参数
             @return : 解析数据
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.RFID_M100_CMD_HEAD">
             数据头
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.RFID_M100_CMD_END">
             数据尾
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.RFID_TYPE_CMD">
            命令
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.RFID_TYPE_ACK">
            响应
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.RFID_TYPE_NOTIFY">
            通知
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_VERSION">
            获取版本
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_INVENTORY">
            单次轮询
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_nINVENTORY">
            多次轮询
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_STOP_nINVENTORY">
            停止多次
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_SELECT">
            选择标签
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_SELECT">
            选择标签
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SELECT_MODE">
            选择模式
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_READ">
            读取数据区
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_WRITE">
            写入数据区
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_LOCK">
            锁定数据区
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_KILL">
            灭活标签(难道是写坏他)
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_QUERY">
             获取
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_QUERY">
            设置
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_REGION">
            设置地区
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_ANTENNA">
             设置天线
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_CHANNEL">
            设置工作信道
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_CHANNEL">
             读取通道
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_AUTO_CHANNEL">
             自动通道
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_TX_POWER">
            发送功率
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_TX_POWER">
            设置功率
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_TX_FREQ">
            设置载波
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_GET_RX_PARAM">
            接收设置
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_RX_PARAM">
             设置接受参数
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_TEST_RX_SIGNAL">
            测试接收
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_TEST_RX_RSSI">
             护卫接收RSSI
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_IO_PORT">
            端口设置
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_NXP_PROTECT">
            NXP保护设置
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_NXP_CHANGE_EAS">
             NXP加密方式改变
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_SET_NXP_EAS_ALARM">
             NXP加密报警
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.CMD_M100_ERROR">
            错误状态
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Cmd.LIMIT_POWER_MAX">
            功率范围
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_get_power_max">
            =============================================================================================================
            
            =============================================================================================================
            -------------------------------------------------------------------------------------------------------------
             <summary>
             最大功率
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.#ctor(RfidLib.rfid.based.BaseReader)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造函数
             </summary>
             <param name="reader"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.ToText(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出文本
             </summary>
             <param name="cmd"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.checksum(System.Byte[],System.Int32,System.Int32)">
             生成校验码
            
             @param array : 数组
             @param start : 开始
             @param len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.pipe_checksum(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
             校验码
            
             @param _pipe  : 队列
             @param _start : 开始
             @param _len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.make_cmd(System.Byte,System.Byte[],System.Int32,System.Int32)">
             生成命令
            
             @param cmd   : 命令
             @param array : 参数
             @param start : 开始
             @param len   : 长度
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.make_cmd(System.Byte,System.Byte[])">
             生成命令(短版本)
            
             @param cmd   : 命令
             @param param : 参数
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_get_version(System.Byte)">
             获取版本
            
             @param version : (0-硬件版本,1-软件版本,2-制造商)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_inventory">
             单次轮询
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_ninventory(System.Int16)">
             多次轮询
            
             @param count : 次数
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_stop_ninventory">
             停止多次轮询
            
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_select_param(System.Byte,System.Int32,System.Byte,System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_select_mode(System.Byte)" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_read(System.Int32,System.Byte,System.Int16,System.Int16)">
             读取数据
            
             @param Password : 访问密码
             @param MemBank  : 内存区域
             @param Offset   : 读取偏移地址(Word单位)
             @param Length   : 读取数据长度(Word单位)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_write(System.Int32,System.Byte,System.Int16,System.Int16,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param MemBank  : 区域
             @param Offset   : 偏移(Word单位)
             @param Length   : 长度(Word单位)
             @param Data     : 数据
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Cmd.cmd_lock(System.Int32,System.Int32)" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_kill(System.Int32)">
             灭活
            
             @param AccessPassword : 密码
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_get_query">
             获取Query参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_query(System.Int16)">
             设置Query参数
            
             @param query ： 查询
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_region(System.Byte)" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_channel(System.Byte)" -->
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_get_channel">
             获取工作信道
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_auto(System.Boolean)">
             自动调频
            
             @param auto : 自动
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_get_tx_power">
             获取发送功率
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_tx_power(System.Int16)">
             设置输出功率
            
             @param power : 功率大小()
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_tx_continue(System.Boolean)">
             设置连续载波
            
             @param auto : 连续
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_get_rx_param">
             获取接收解调器参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_rx_param(System.Byte,System.Byte,System.Int16)">
             设置接收解调器参数
            
             @param mixer_g : MIX_G
             @param if_g    : IF_G
             @param thrd    : THRD
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_gpio(System.Byte,System.Byte,System.Int16)">
             脚位控制
            
             @param para0 : 操作类型(0-方向,1-写电平,2读电平)
             @param para1 : 端口范围(1~4 : gpio1~gpio4)
             @param para2 : 输入输出(0-输入,1-输出)/高低电平(0-低电平,1-高电平)
             @return : 命令流
            -------------------------------------------------------------------------------------------------------------
             <summary>
              脚位控制
             </summary>
             <param name="para0">The para0<see cref="T:System.Byte"/></param>
             <param name="para1">The para1<see cref="T:System.Byte"/></param>
             <param name="para2">The para2<see cref="T:System.Int16"/></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.cmd_set_antenna(System.Byte)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The cmd_set_antenna
             </summary>
             <param name="ant">The ant<see cref="T:System.Byte"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_init">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_init
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_reset">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_reset
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_inventory(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_inventory
             </summary>
             <param name="n">The n<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_ninventory(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_ninventory
             </summary>
             <param name="n">The n<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_stop">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_stop
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_set_select(System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_set_select
             </summary>
             <param name="Bank">The Bank<see cref="T:System.Int32"/></param>
             <param name="Pos">The Pos<see cref="T:System.Int32"/></param>
             <param name="Mask">The Mask<see cref="!:byte[]"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_get_select">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_get_select
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_read(System.Int32,System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_read
             </summary>
             <param name="Password">The Password<see cref="T:System.Int32"/></param>
             <param name="Bank">The Bank<see cref="T:System.Int32"/></param>
             <param name="Pos">The Pos<see cref="T:System.Int32"/></param>
             <param name="Len">The Len<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_write(System.Int32,System.Int32,System.Int32,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_write
             </summary>
             <param name="Password">The Password<see cref="T:System.Int32"/></param>
             <param name="Bank">The Bank<see cref="T:System.Int32"/></param>
             <param name="Pos">The Pos<see cref="T:System.Int32"/></param>
             <param name="data">The data<see cref="!:byte[]"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------        
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_lock(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_lock
             </summary>
             <param name="Password">The Password<see cref="T:System.Int32"/></param>
             <param name="Bank">The Bank<see cref="T:System.Int32"/></param>
             <param name="LockType">The LockType<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_kill(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_kill
             </summary>
             <param name="Password">The Password<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_set_tx_power(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_set_tx_power
             </summary>
             <param name="power">The power<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_get_tx_power">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_get_tx_power
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_get_region">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_get_region
             </summary>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_set_antenna(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_set_antenna
             </summary>
             <param name="ant">The ant<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_set_gpio(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_set_gpio
             </summary>
             <param name="gpio">The gpio<see cref="T:System.Int32"/></param>
             <param name="hilo">The hilo<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_get_gpio(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_get_gpio
             </summary>
             <param name="gpio">The gpio<see cref="T:System.Int32"/></param>
             <returns>The <see cref="!:byte[]"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Cmd.rfid_set_region(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             The rfid_set_region
             </summary>
             <param name="region">The region<see cref="T:System.Int32"/></param>
             <param name="minFreq">The minFreq<see cref="T:System.Int32"/></param>
             <param name="maxFreq">The maxFreq<see cref="T:System.Int32"/></param>
             <returns>字节流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_CODE">
            错误码
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_NO_ERROR">
             没有错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_INVENTORY_FAIL">
             没有标签或者校验错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_ACCESS_FAIL">
             密码错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_COMMAND">
             命令错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_FHSS_FAIL">
             信道被占用
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_READ_FAIL">
             读取失败
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_READ_ERROR">
             读取错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_WRITE_FAIL">
             写入失败
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_WRITE_ERROR">
             写入错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_LOCK_FAIL">
             锁定失败
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_LOCK_ERROR">
              锁定错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_KILL_FAIL">
             灭活失败
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_KILL_ERROR">
             灭活错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_READ_PROTECT_FAIL">
             NXP Command
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_RESET_PROTECT_FAIL">
            复位保护错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_CHANGE_EAS_FAIL">
            改变EAS错误
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Err.ERR_M100_NXP_ERROR">
            NXP错误
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Err.Format(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出文本
             </summary>
             <param name="error"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.m100.RfidM100Reader">
            <summary>
            类定义
            </summary>
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Reader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="ev">消息接口</param>
            <param name="channels">通道数</param>
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Set.region">
               区域
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Set.auto_skip">
            * 跳频
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Set.freq_channel">
            * 频道
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Set.times">
            * 每秒钟次数
        </member>
        <member name="F:RfidLib.rfid.m100.RfidM100Set.PF_SETTING_REGION">
            * 设置名称
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Set.SetupReadWrite(System.Object,System.Boolean)">
            <summary>
            The setupReadWrite
            </summary>
            <param name="context">The context<see cref="T:System.Object"/></param>
            <param name="write">The write<see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Set.setupLoad(System.Object)">
            <summary>
            The setupLoad
            </summary>
            <param name="context">The context<see cref="T:System.Object"/></param>
        </member>
        <member name="M:RfidLib.rfid.m100.RfidM100Set.setupSave(System.Object)">
            <summary>
            The setupSave
            </summary>
            <param name="context">The context<see cref="T:System.Object"/></param>
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
             检测数据,新的算法.
            
             @param _pipe : 队列
             @param _len  : 长度
             @return : 有效长度
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.CheckParser(System.Byte[],System.Int32,System.Int32)">
             解析数据
            
             @param array : 数据
             @param start : 位置
             @param len   : 长度
             @return : 解析是否成功,返回结束位置!
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckVersion">
            版本
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckInventor">
            轮询
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckReadMem">
            读数据
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckWriteMem">
            写数据
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckParam">
            普通返回1字节
        </member>
        <member name="T:RfidLib.rfid.pr9200.RfidPR9200Ack.AckWParam">
            普通返回2字节
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.Parser(System.Int32,System.Int32,System.Byte[])">
             全部应答集中处理
            
             @param cmd   : 命令
             @param param : 输入数据
             @return : 对象
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_write_tag(System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_read_tag(System.Byte[])" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_lock_tag(System.Byte[])">
             响应锁定
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_kill_tag(System.Byte[])">
             解析灭活返回值
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_get_version(System.Byte[])">
             解析数据
            
             @param param : 数据流
             @return : 版本字符串
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_inventory(System.Byte[])">
             解析轮询
            
             @param param : 输入数据
             @return : 标签
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_get_query(System.Byte[])" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_get_tx_power(System.Byte[])">
             输出功率
            
             @param param : 输入数据
             @return ：功率值
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_get_rx_param(System.Byte[])" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Ack.ack_normal(System.Byte[])">
             普通响应
            
             @param param : 参数
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.checksum(System.Byte[],System.Int32,System.Int32)">
             生成校验码
            
             @param array : 数组
             @param start : 开始
             @param len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.pipe_checksum(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
             校验码
            
             @param _pipe  : 队列
             @param _start : 开始
             @param _len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.make_cmd(System.Byte,System.Byte[],System.Int32,System.Int32)">
             生成命令
            
             @param cmd   : 命令
             @param array : 参数
             @param start : 开始
             @param len   : 长度
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.make_cmd(System.Byte,System.Byte[])">
             生成命令(短版本)
            
             @param cmd   : 命令
             @param param : 参数
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_get_version(System.Byte)">
             获取版本
            
             @param version : (0-硬件版本,1-软件版本,2-制造商)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_inventory">
             单次轮询
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_ninventory(System.Int16)">
             多次轮询
            
             @param count : 次数
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_stop_ninventory">
             停止多次轮询
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_select_param(System.Byte,System.Int32,System.Byte,System.Byte,System.Byte[])">
             选择指令
            
             @param selParam : 选择参数(target[3]/action[3]/membank[2])
             @param Ptr      : 指针参数(Epc开始位置,bit单位)
             @param MaskLen  : 有效长度(bit单位长度)
             @param Truncate : 什么鬼 (00-关闭Truncate,0x80-打开Truncate)
             @param Mask     : 指示数据
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_select_mode(System.Byte)" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_read(System.Int32,System.Byte,System.Int16,System.Int16)">
             读取数据
            
             @param AccessPassword : 访问密码
             @param MemBank        : 内存区域
             @param offset         : 读取偏移地址(Word单位)
             @param lenght         : 读取数据长度(Word单位)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_write(System.Int32,System.Byte,System.Int16,System.Int16,System.Byte[])">
             写标签
            
             @param AccessPassword : 密码
             @param MemBank        : 区域
             @param offset         : 偏移
             @param lenght         : 长度
             @param data           : 数据
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_lock(System.Int32,System.Int32)" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_kill(System.Int32)">
             灭活
            
             @param AccessPassword : 密码
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_get_query">
             获取Query参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_query(System.Int16)">
             设置Query参数
            
             @param query ： 查询参数
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_region(System.Byte)" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_channel(System.Byte)" -->
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_get_channel">
             获取工作信道
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_auto(System.Boolean)">
             自动调频
            
             @param auto : 自动
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_get_tx_power">
             获取发送功率
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_tx_power(System.Int16)">
             设置输出功率
            
             @param power : 功率大小
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_tx_continue(System.Boolean)">
             设置连续载波
            
             @param auto : 连续
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_get_rx_param">
             获取接收解调器参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_rx_param(System.Byte,System.Byte,System.Int16)">
             设置接收解调器参数
            
             @param mixer_g : MIX_G
             @param if_g    : IF_G
             @param thrd    : THRD
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Cmd.cmd_set_gpio(System.Byte,System.Byte,System.Int16)">
             脚位控制
            
             @param para0 : 操作类型(0-方向,1-写电平,2读电平)
             @param para1 : 端口范围(1~4 : gpio1~gpio4)
             @param para2 : 输入输出(0-输入,1-输出)/高低电平(0-低电平,1-高电平)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Reader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
             初始化
            
             @param event    : 消息接口
             @param channels : 通道数
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.DEF_HARDWARE_VERSION">
            获取版本
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.DEF_MEMBANK_RFU">
            区域指定(MemoryBank)
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.system_hardware_version">
            全局
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.region">
            区域
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.auto_skip">
            跳频
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.freq_channel">
            频道
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.times">
            每秒钟次数
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.user_shake">
            震动
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.user_sound">
            声音
        </member>
        <member name="F:RfidLib.rfid.pr9200.RfidPR9200Set.PF_SETTING_REGION">
            设置名称
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Set.setupLoad(System.Object)">
             加载设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.pr9200.RfidPR9200Set.setupSave(System.Object)">
             保存设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.#ctor(RfidLib.rfid.based.BaseReader)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="reader"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找数据包
             </summary>
             <param name="pipe"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------        
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.CheckParser(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             解析数据
             </summary>
             <param name="array"></param>
             <param name="start"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ConvertLocalToCommon(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             转换消息
             </summary>
             <param name="cmd">The cmd<see cref="T:System.Int32"/></param>
             <returns>The <see cref="T:System.Int32"/></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckByte">
            -------------------------------------------------------------------
            单字节 - 数据
            -------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckWord">
            -------------------------------------------------------------------
            单字 - 数据
            -------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckWord.code">
            返回值
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckDetectAnt">
            -------------------------------------------------------------------
            单字节 - 数据
            -------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckDetectAnt.ant">
            返回值
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckDetectAnt.error">
            返回值 0x22
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckVersion">
            版本
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckVersion.Major">
            主版本号
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckVersion.Minor">
            从版本号
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckPower">
            功率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckPower.power1">
            Defines the power1
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckPower.power2">
            Defines the power2
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckPower.power3">
            Defines the power3
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckPower.power4">
            Defines the power4
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckTemperature">
            温度
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckTemperature.PlusMinus">
            0-零下,1-零上
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckTemperature.Temp">
            摄氏度
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckGpio">
            读取端口值
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIdentifier">
            读取标识
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIdentifier.Identifier">
            12字节标识符
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckInventory">
            盘存标签
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckInventory.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckInventory.TagCount">
            标签数量
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckInventory.ReadRate">
            识别速率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckInventory.TotalRead">
            总读取次数
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock">
            读取数据
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.TagCount">
            标签总数
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.DataLen">
            有效长度(PC+CRC+EPC)
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.Data">
            数据(PC+EPC+CRC+数据)
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.ReadLen">
            Read/Write的长度 / ErrCode / RSSI
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.ReadCount">
            成功操作次数 ReadCout/WriteCount/LockCount
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckReadWriteLock.pc">
            Data （ pc+epc+crc+dat ）
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckEpcMatch">
            EPC匹配
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory">
            实时盘存
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.FREQ">
            频点
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.FreqAnt">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.PC">
            协议
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.EPC">
            标签
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.RSSI">
            总读取次数
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckRealTimeInventory.Phase">
            相位
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_inventory">
            存盘 6B
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_inventory.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_inventory.UID">
            数据(8字节)
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_read">
            读取
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_read.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_read.Data">
            数据(PC+EPC+CRC+数据)
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_write">
            写入
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_write.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_write.WrittenCount">
            数量写入
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_lock">
            锁定
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_lock.AntID">
            天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_lock.Status">
            状态
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_query_lock">
            查询锁状态
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_query_lock.AntID">
            填充
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KAck.AckIso18000_6b_query_lock.QueryAddress">
            数量
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.Parser(System.Int32,System.Int32,System.Byte[])">
             全部应答集中处理
            
             @param cmd   : 命令
             @param param : 输入数据
             @return : 对象
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_firmware_version(System.Byte[])">
             解析获取版本
            
             @param param ： 输入流
             @return ： 版本
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_output_power(System.Byte[])">
             解析输出功率
            
             @param param : 输入流
             @return : 功率
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_reader_temperature(System.Byte[])">
             获取温度
            
             @param param : 参数
             @return : 温度
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_read_gpio_value(System.Byte[])">
             读取端口值
            
             @param param : 参数
             @return : 端口
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_inventory(System.Byte[])">
             存盘开始
            
             @param param : 参数
             @return : 盘存
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_read_write_lock_kill(System.Byte[])">
             读写锁定
            
             @param param : 参数
             @return : 读取数据
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_access_epc_match(System.Byte[])">
             获取EPC匹配
            
             @param param : 参数
             @return : 匹配
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_real_time_inventory(System.Byte[])">
             获取实时盘存
            
             @param param : 参数
             @return : 盘存
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_inventory_buffer_tag_count(System.Byte[])">
             获取数量
            
             @param param : 参数
             @return : 2字节输出()
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_fast_switch_ant_inventory(System.Byte[])">
             快速盘存
            
             @param param : 参数
             @return : 实时盘存
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_ISO8000_6b_inventory(System.Byte[])">
             6B盘存
            
             @param param : 参数
             @return : 存盘类
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_ISO8000_6b_read_tag(System.Byte[])">
             读取标签
            
             @param param : 参数
             @return ：读取类
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_ISO8000_6b_write_tag(System.Byte[])">
             写数标签
            
             @param param ： 参数
             @return ： 写标签状态
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_ISO8000_6b_lock_tag(System.Byte[])">
             锁定标签
            
             @param param ： 参数
             @return ： 锁定状态
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_ISO8000_6b_query_lock_tag(System.Byte[])">
             查询锁定6B标签
            
             @param param : 参数
             @return ： 锁定
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_get_reader_identifier(System.Byte[])">
             读取
            
             @param param : 参数
             @return : 标识
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_detect_ant(System.Byte[])">
             天线未连接响应
            
             @param param : 参数
             @return : 标识
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KAck.ack_normal(System.Byte[])">
             普通响应
            
             @param param : 参数
             @return : 标识
        </member>
        <!-- Badly formed XML comment ignored for member "T:RfidLib.rfid.r2000.RfidR2KCmd" -->
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.DEBUG">
             调试
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.TAG">
             目标
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.RFID_R2K_CMD_HEAD">
            * 数据头
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.RFID_INVALID_ANT">
            * 无效天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_RESET">
             复位
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_UART_BAUDRATE">
             设置波特率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_FIRMWARE_VERSION">
             获取版本
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_READER_ADDRESS">
             设置地址
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_WORK_ANTENNA">
             设置天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_WORK_ANTENNA">
             获取天线
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_OUTPUT_POWER">
             设置功率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_OUTPUT_POWER">
             读取功率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_FREQUENCY_REGION">
               读写频率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_FREQUENCY_REGION">
                读写频率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_BEEPER_MODE">
               设置响铃模式
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_READER_TEMPERATURE">
               读取温度
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_READ_GPIO_VALUE">
               读写端口
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_ANT_CONNECTION_DETECTOR">
               读写天线检测
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_ANT_CONNECTION_DETECTOR">
               获取天线检查开关
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_TEMPORARY_OUTPUT_POWER">
               输出功率
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_READER_IDENTIFIER">
               设置标识
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_READER_IDENTIFIER">
               读取ID
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_RF_LINK_PROFILE">
               设置射频
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_RF_PORT_RETURN_LOSS">
               获取回波损耗
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_INVENTORY">
             查询标签
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_READ">
              读取
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_WRITE">
             写入
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_BLOCK_WRITE">
             写入
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_LOCK">
             锁定
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_KILL">
             灭活
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_ACCESS_EPC_MATCH">
             设置过滤
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_ACCESS_EPC_MATCH">
             读取过滤
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_REAL_TIME_INVENTORY">
             实模式
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_FAST_SWITCH_ANT_INVENTORY">
             快速天线切换
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_CUSTOMIZED_SESSION_TARGET_INVENTORY">
             会话模式
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_IMPINJ_FAST_TID">
             快速TID
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_SET_AND_SAVE_IMPINJ_FAST_TID">
             保存并设置快速TID
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_IMPINJ_FAST_TID">
             读取快速TID模式
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_ISO18000_6B_INVENTORY">
             6B卡读写锁定
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.CMD_R2K_GET_INVENTORY_BUFFER">
             缓存处理
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.INVENTORY_TYPE_REAL">
             轮训模式
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.inventoryType">
            * 类型
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KCmd.LIMIT_POWER_MAX">
            功率范围(0~33dBm)
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.getInventoryType">
            -----------------------------------------------------------------------------------------
             <summary>
             获取 - 轮训类型
             </summary>
             <returns></returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.setInventoryType(System.Int32)">
            -----------------------------------------------------------------------------------------
             <summary>
             设置 - 轮训类型
             </summary>
             <param name="invType"></param>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.#ctor(RfidLib.rfid.based.BaseReader)">
            -----------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="reader"></param>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_get_power_max">
            -----------------------------------------------------------------------------------------
             <summary>
             获取最大功率
             </summary>
             <returns></returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_set_region(System.Byte)">
            -----------------------------------------------------------------------------------------
             <summary>
             设置区域
             </summary>
             <param name="v"></param>
             <returns></returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.ToText(System.Int32)">
            -----------------------------------------------------------------------------------------
             <summary>
             输出文本模式
             </summary>
             <param name="btCmd"></param>
             <returns></returns>
            -----------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.checksum(System.Byte[],System.Int32,System.Int32)">
             生成校验码
            
             @param array : 数组
             @param start : 开始
             @param len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.pipe_checksum(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
             生成校验码
            
             @param pipe  : 队列
             @param start : 开始
             @param len   : 长度
             @return : 校验码
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.r2000.RfidR2KCmd.make_cmd(System.Byte,System.Byte,System.Byte[],System.Int32,System.Int32)" -->
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.make_cmd(System.Int32,System.Byte[])">
             生成命令(短版本)
            
             @param cmd   : 命令
             @param param : 参数
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.make_cmd(System.Int32)">
             简短命令
            
             @param cmd ：命令
             @return ： 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_reset">
             复位
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_uart_baudrate(System.Int32)">
             设置波特率
            
             @param baud : 波特率(3-38400,4-115200)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_firmware_version">
             获取 - 版本
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_reader_address(System.Int32)">
             设置 - 读写器地址
            
             @param address : 地址(0 ~ 254)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_work_antenna(System.Int32)">
             设置 - 读写器天线
            
             @param antenna : 天线 - 4通道模块：(0~3) / 8通道模块：(0~7)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_work_antenna">
             获取 - 读写器天线
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_output_power(System.Int32[])">
             设置 - 读写器天线输出功率
            
             @param power : 输出功率(0~33)单位dBm
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_output_power">
             读取 - 读写器天线输出功率
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_frequency_region(System.Int32,System.Int32,System.Int32)">
             设置频率范围
            
             @param region     : 射频范围(1-FCC,2-ETSO,3-CHN)
             @param start_freq : 起始频率
             @param end_freq   : 结束频率
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_beeper_mode(System.Int32)">
             设置蜂鸣器模式
            
             @param mode : 模式(0-安静,1-每次存盘响,2-每张标签响)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_reader_temperature">
             读取温度
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_read_gpio_value">
             读取端口值
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_write_gpio_value(System.Int32,System.Int32)">
             设置端口值
            
             @param Gpio  : 脚位(3,4)
             @param Value : 电平(0,1)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_ant_connection_detector(System.Int32)">
             设置天线连接检测
            
             @param DetectorSensitivity : 检测灵敏度(00,ndB)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_temporary_output_power(System.Int32)">
             设置输出功率 (此设置不记忆，尽量使用此接口调节功率)
            
             @param DetectorSensitivity : 输出功率
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_reader_identifier(System.Byte[])">
             设置读写器标识符
            
             @param array : 12个字节的标识符
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_reader_identifier">
             读取标识符
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_rf_link_profile(System.Int32)">
             设置 - 联机配置文件
            
             @param ProfileID : 配置文件(0xD1~0xD3)
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_rf_link_profile">
             获取 - 配置
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_rf_port_return_loss">
             获取 - 此频点当前工作天线端口的 - 回波损耗值
            
             @return : 字节流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_inventory_buffer(System.Int32)">
             标签存盘
            
             @param repeat : 重复次数(0xff最快,对应少标签时)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_read(System.Int32,System.Byte,System.Byte,System.Byte)">
             读标签
            
             @param Password : 访问密码 (4字节密码)
             @param Bank     : 内存区域 (0-reseved,1-epc,2-tid,3-user)
             @param Offset   : 读取地址 (Word单位)(根据标签,一般2开始)
             @param Lenght   : 读取长度 (Word单位)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_write(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param Bank     : 区域(0-reseved,1-epc,2-tid,3-user)
             @param Offset   : 偏移
             @param Lenght   : 长度
             @param Data     : 数据
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_lock(System.Int32,System.Byte,System.Byte)">
             锁定
            
             @param PassWord : 密码 (4字节)
             @param Bank     : 内存 (1 - User,2 - TID,3 - EPC,4 - AccessPassword,5 - KillPassword)
             @param LockType : 锁定 (0-开放,1-锁定,2-永久开放,3-永久锁定)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_kill(System.Int32)">
             灭活
            
             @param KillPassword : 密码
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_access_epc_match(System.Byte,System.Byte[])">
             设置访问匹配
            
             @param mode : 模式 (0 - EPC一直有效, 1 - 清除匹配)
             @param epc  : 数据 (选中的 EPC)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_access_epc_match">
             获取 - 访问匹配
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_real_time_inventory(System.Int32)">
             标签存盘
            
             @param repeat : 重复次数(0xff最快,对应少标签时)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_fast_switch_ant_inventory(System.Int32[],System.Int32[],System.Int32,System.Int32)">
             快速切换天线 (4通道)
            
             @param A        : 第一轮天线号(0~3)
             @param Astay    : 轮询次数 (0~250)
             @param B        : 第二轮天线号
             @param Bstay    : 轮询次数
             @param C        : 第三轮天线号
             @param Cstay    : 轮询次数
             @param D        : 第四轮天线号
             @param Dstay    : 轮询次数
             @param Interval : 休息时间 (nMs)
             @param Repeat   : 重复以上这样做的次数
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_customized_session_target_inventory(System.Int32,System.Int32,System.Int32)">
             会话方式盘存 (这个效果最好 ?)
            
             @param session : 会话 (S0/S1/S2/S3)
             @param target  : 目标 (A/B)
             @param repeat  : 次数
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_impinj_fast_tid(System.Int32)">
             在识别EPC的同时识别TID
            
             @param fastTID : 开关fastTID (0x8D:打开FastTID,0x00:其他)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_set_and_save_impinj_fast_tid(System.Int32)">
             设置 - 并且保存
            
             @param fastTID : 快速存盘TID
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_impinj_fast_tid">
             获取设置
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_iso18000_6b_inventory">
             进行ISO 18000 -6B多标签识别操作
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_iso18000_6b_read(System.Byte[],System.Int32,System.Int32)">
             读取数据
            
             @param UID          : 被操作标签的UID,8个字节
             @param StartAddress : 要读取的数据首地址
             @param Length       : 要读取的数据长度
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_iso18000_6b_write(System.Byte[],System.Int32,System.Int32,System.Byte[])">
             写标签
            
             @param UID          : 标签 UID
             @param StartAddress : 地址
             @param Length       : 长度
             @param Data         : 数据
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_iso18000_6b_lock(System.Byte[],System.Int32)">
             锁定标签
            
             @param UID         : 标签UID
             @param LockAddress : 锁定地址
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_iso18000_6b_query_lock(System.Byte[],System.Int32)">
             查询锁定
            
             @param UID         : 标签UID
             @param LockAddress : 查询地址
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_inventory_buffer">
             缓存操作
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_and_reset_inventory_buffer">
             获取缓冲存盘,命令成功完成后，缓存中的数据将被全部清空
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_get_inventory_buffer_tag_count">
             获取存盘数量
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.cmd_reset_inventory_buffer">
             复位存盘缓冲
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_inventory(System.Int32)">
            -----------------------------------------------------------------------------------------------
             <summary>
             查询标签
             </summary>
             <param name="rep">次数</param>
             <returns></returns>
            -----------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_ninventory(System.Int32)">
            -----------------------------------------------------------------------------------------------
             <summary>
             标签 - 轮训
             </summary>
             <param name="n"></param>
             <returns></returns>
            -----------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_stop">
            -----------------------------------------------------------------------------------------------
             <summary>
             停止
             </summary>
             <returns></returns>
            -----------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_set_select(System.Int32,System.Int32,System.Byte[])">
             选择标签
            
             @param Bank : 区域
             @param Pos  : 位置
             @param Mask : 匹配数据
             @return : 数据流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_read(System.Int32,System.Int32,System.Int32,System.Int32)">
            -----------------------------------------------------------------------------------------------
             <summary>
             读取
             </summary>
             <param name="Password"></param>
             <param name="Bank"></param>
             <param name="Pos"></param>
             <param name="Len"></param>
             <returns></returns>
            -----------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_write(System.Int32,System.Int32,System.Int32,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param Bank     : 段位
             @param Pos      : 位置
             @param data     : 数据
             @return : 数据流
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KCmd.rfid_set_antenna(System.Int32)">
            <summary>
            选中当前天线
            </summary>
            <param name="ant"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KErr.Format(System.Int32)">
             格式
            
             @param code : 编码
             @return : 文本描述
            <summary>
            The format
            </summary>
            <param name="error">The code<see cref="T:System.Int32"/></param>
            <returns>The <see cref="T:System.String"/></returns>
        </member>
        <member name="T:RfidLib.rfid.r2000.RfidR2KReader">
            <summary>
            Defines the <see cref="T:RfidLib.rfid.r2000.RfidR2KReader" />
            </summary>
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KReader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             创建读写器
             </summary>
             <param name="ev">消息接口</param>
             <param name="channels">通道数</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KSet.region">
            区域
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KSet.freq_channel">
            频道
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KSet.times">
            每秒钟次数
        </member>
        <member name="F:RfidLib.rfid.r2000.RfidR2KSet.PF_SETTING_REGION">
            设置名称
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KSet.setupLoad(System.Object)">
             加载设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KSet.setupSave(System.Object)">
             保存设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.r2000.RfidR2KSet.SetupReadWrite(System.Object,System.Boolean)">
            <summary>
            设置更新
            </summary>
            <param name="context"></param>
            <param name="write"></param>
        </member>
        <member name="T:RfidLib.rfid.IRfidEvent">
            =================================================================================================================
             <summary>
             消息事件
             </summary>
            =================================================================================================================
        </member>
        <member name="M:RfidLib.rfid.IRfidEvent.OnRfidResponse(RfidLib.rfid.based.BaseReader,System.Int32,System.Int32,System.Byte[],System.Object)">
            =============================================================================================================
             <summary>
             标签消息响应事件
             </summary>
             <param name="reader">读写器</param>
             <param name="type">类型</param>
             <param name="cmd">命令</param>
             <param name="param">参数</param>
             <param name="obj"> 附加 (返回各种对象,包括标签对象)<see cref="T:System.Object"/></param>
            =============================================================================================================
        </member>
        <member name="T:RfidLib.rfid.IConfigEvent">
            <summary>
            配置 - 消息
            </summary>
        </member>
        <member name="M:RfidLib.rfid.IConfigEvent.OnConfigEvent(RfidLib.rfid.RfidConfig,System.Int32,System.Int32,System.Byte[])">
            <summary>
            消息接口
            </summary>
            <param name="config"></param>
            <param name="type"></param>
            <param name="offset"></param>
            <param name="data"></param>
        </member>
        <member name="T:RfidLib.rfid.RfidConfig">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="F:RfidLib.rfid.RfidConfig.rfidMan">
             关联对象
        </member>
        <member name="F:RfidLib.rfid.RfidConfig.even">
             消息接口
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.setEven(RfidLib.rfid.IConfigEvent)">
            <summary>
            
            </summary>
            <param name="even"></param>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.getManager">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.#ctor(RfidLib.rfid.RfidManager)">
            <summary>
            
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.mk_crc(System.Byte[],System.Int32,System.Int32)">
            <summary>
            生成校验码
            </summary>
            <param name="a"></param>
            <param name="offset"></param>
            <param name="lenght"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.mk_crc16(System.Byte[],System.Int32,System.Int32)">
            <summary>
             生成校验码
            </summary>
            <param name="a"></param>
            <param name="offset"></param>
            <param name="lenght"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.mk_crc(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
            <summary>
             生成校验码
            </summary>
            <param name="pipe"></param>
            <param name="offset"></param>
            <param name="lenght"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.mk_crc16(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
            <summary>
             生成校验码
            </summary>
            <param name="pipe"></param>
            <param name="offset"></param>
            <param name="lenght"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.mk_pack(System.Byte,System.Byte,System.Byte[])">
            <summary>
             生成 - 数据包
            </summary>
            <param name="type"></param>
            <param name="offset"></param>
            <param name="ps"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.send(System.Int32,System.Int32,System.Byte[])">
             发送数据包
            
             @param type   ： 类型
             @param offset ： 偏移量
             @param ps     ： 数据
            
             @return ：数据包
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.FindConfigData(System.Byte[])">
            <summary>
            查找配置数据
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.OnEven(System.Byte,System.Byte,System.Byte[])">
             消息接口
            
             @param type   ： 类型
             @param offset ： 偏移
             @param a      ： 数据
        </member>
        <member name="M:RfidLib.rfid.RfidConfig.FindConfigPackage(CommLib.bytes.DataPipe,System.Int32)">
             查找配置数据
            
             @param pipe ： 队列
             @param len  ：长度
        </member>
        <member name="T:RfidLib.rfid.RfidExportSetup">
            <summary>
            导出设置
            </summary>
        </member>
        <member name="T:RfidLib.rfid.RfidManager">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             管理器
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="F:RfidLib.rfid.RfidManager.DEBUG">
            调试开关
        </member>
        <member name="F:RfidLib.rfid.RfidManager.DEBUG_MAN">
            调试 manager
        </member>
        <member name="F:RfidLib.rfid.RfidManager.DEBUG_RFID">
            调试 RFID
        </member>
        <member name="F:RfidLib.rfid.RfidManager.COMMAND_WAIT_TM">
            等待时间 300ms
        </member>
        <member name="F:RfidLib.rfid.RfidManager.DELAY_WAIT_TIME">
            等待
        </member>
        <member name="F:RfidLib.rfid.RfidManager.TAG">
            目标
        </member>
        <member name="F:RfidLib.rfid.RfidManager.SUPPORT_SHOW_BATTERY">
            支持显示电池电量
        </member>
        <member name="F:RfidLib.rfid.RfidManager.IsLock">
            锁定 (锁定后，不增加新标签。只更新现有标签信号强度和时间)
        </member>
        <member name="F:RfidLib.rfid.RfidManager.IsRunning">
            * 开始执行
        </member>
        <member name="F:RfidLib.rfid.RfidManager.mContext">
            * 上下文
        </member>
        <member name="F:RfidLib.rfid.RfidManager.readerType">
            * 读取类型
        </member>
        <member name="F:RfidLib.rfid.RfidManager.listReader">
            * 读写器列表
        </member>
        <member name="F:RfidLib.rfid.RfidManager.listTags">
            * 标签列表
        </member>
        <member name="F:RfidLib.rfid.RfidManager.pipeDat">
            输入数据流
        </member>
        <member name="F:RfidLib.rfid.RfidManager.port">
            * 当前端口
        </member>
        <member name="F:RfidLib.rfid.RfidManager.isResponse">
            * 响应
        </member>
        <member name="F:RfidLib.rfid.RfidManager.pipeCmd">
            * 命令队列
        </member>
        <member name="F:RfidLib.rfid.RfidManager.thread">
            * 查询线程
        </member>
        <member name="M:RfidLib.rfid.RfidManager.RunLoop(System.Object)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             循环
             </summary>
             <param name="obj"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.SetPort(RfidLib.Port.PortBase)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             設置接口
             </summary>
             <param name="port"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.GetList">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取标签列表
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.SetList(System.Collections.Generic.List{RfidLib.rfid.TagItem})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置列表
             </summary>
             <param name="l"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.SetReaderType(RfidLib.rfid.based.EReaderType)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
              设置读写器类型
             </summary>
             <param name="type"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.GetReaderType">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取读写器类型
             </summary>
             <returns>类型</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.GetReader(RfidLib.rfid.based.EReaderType)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取读写器
             </summary>
             <param name="type"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.#ctor(System.Object,RfidLib.rfid.based.EReaderType,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化管理器
             </summary>
             <param name="context">上下文</param>
             <param name="readerType">读写器类型</param>
             <param name="channels">通道数</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.DataIn(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             数据输入
             </summary>
             <param name="array">数据</param>
             <param name="start">开始</param>
             <param name="len">长度</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.DataIn(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             数据输入
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.CheckData">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检查数据
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.GetBreakTagCount">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取移动的数量
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.Clear">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             清空标签 
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.Add(RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             添加标签
             </summary>
             <param name="tag"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.UpdateTid(System.Byte[],System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新标签
             </summary>
             <param name="epc">标签码</param>
             <param name="tid">唯一码</param>
             <returns>成功</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.UpdateUsr(System.Byte[],System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新标签
             </summary>
             <param name="epc"></param>
             <param name="user"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.UpdateRfu(System.Byte[],System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新RFU
             </summary>
             <param name="epc"></param>
             <param name="rfu"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.FindAntAndRssi(RfidLib.rfid.TagItem,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             查找并替换
             </summary>
             <param name="e">标签</param>
             <param name="ant">天线</param>
             <param name="rssi">信号</param>
             <returns>找到</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.Remove(RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             删除标签
             </summary>
             <param name="tag"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.ExportToFile(System.Object,System.Collections.Generic.List{RfidLib.rfid.TagItem})">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             导出到文件
             </summary>
             <param name="context"></param>
             <param name="list"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.ExportToFile(System.Object,RfidLib.data.TagTree)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             导出到文件
             </summary>
             <param name="context"></param>
             <param name="tree"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置
             </summary>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.IsInit(System.Object,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="context"></param>
             <param name="write"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.DataUpdate(System.Object,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新数据
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.ConfigUpdate(System.Object,System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
              配置文件
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnRfidInventory(System.Int32,System.Int32,RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             标签消息
             </summary>
             <param name="type"></param>
             <param name="cmd"></param>
             <param name="obj"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnRfidRead(System.Int32,System.Byte[],System.Byte[],System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读取消息
             </summary>
             <param name="bank"></param>
             <param name="epc"></param>
             <param name="data"></param>
             <param name="pos"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.GetReader">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取读写器
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.SetRfidEvent(RfidLib.rfid.IRfidEvent)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置标签消息接口
             </summary>
             <param name="ev"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnReceive(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             数据接收
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnSended(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             发送数据
             </summary>
             <param name="data"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.WaitResponse">
            -------------------------------------------------------------------------------------------------------------
             <summary>
              等待响应
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.WaitResponse(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             等待响应
             </summary>
             <param name="delay"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.PutCmd(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出 - 命令到缓存
             </summary>
             <param name="array"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.PutCmd(System.Byte[],System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             等待命令完成
             </summary>
             <param name="array"></param>
             <param name="wait"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.PutCmd(System.Byte[],System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出命令
             </summary>
             <param name="array"></param>
             <param name="wait"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.CleanCmd">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             清空 - 命令队列
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.UpdateSetup(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="isWrite"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnSetupUpdate(CommLib.comm.SetupReadWrite)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新
             </summary>
             <param name="s"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.RfidManager.OnReadWrite(CommLib.bytes.ByteFile)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             保存数据
             </summary>
             <param name="b"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.FindPackage(CommLib.bytes.DataPipe,System.Int32)">
             检测数据,新的算法.
            
             @param _pipe : 队列
             @param _len  : 长度
             @return : 有效长度
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.CheckParser(System.Byte[],System.Int32,System.Int32)">
             解析数据
            
             @param array : 数据
             @param start : 位置
             @param len   : 长度
             @return : 解析是否成功,返回结束位置!
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckVersion">
            版本
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckInventor">
            轮询
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckReadMem">
            读数据
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckWriteMem">
            写数据
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckParam">
            普通返回1字节
        </member>
        <member name="T:RfidLib.rfid.slr5300.RfidSlr5300Ack.AckWParam">
            普通返回2字节
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.Parser(System.Int32,System.Int32,System.Byte[])">
             全部应答集中处理
            
             @param cmd   : 命令
             @param param : 输入数据
             @return : 对象
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_write_tag(System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_read_tag(System.Byte[])" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_lock_tag(System.Byte[])">
             响应锁定
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_kill_tag(System.Byte[])">
             解析灭活返回值
            
             @param param : 输入数据
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_get_version(System.Byte[])">
             解析数据
            
             @param param : 数据流
             @return : 版本字符串
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_inventory(System.Byte[])">
             解析轮询
            
             @param param : 输入数据
             @return : 标签
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_get_query(System.Byte[])" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_get_tx_power(System.Byte[])">
             输出功率
            
             @param param : 输入数据
             @return ： 电源功率
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_get_rx_param(System.Byte[])" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Ack.ack_normal(System.Byte[])">
             普通响应
            
             @param param : 参数
             @return : 解析数据
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.#ctor(RfidLib.rfid.based.BaseReader)">
             命令
            
             @param reader : 读写器
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.rfid_get_power_max">
             最大功率
            
             @return : 最大值
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.checksum(System.Byte[],System.Int32,System.Int32)">
             生成校验码
            
             @param array : 数组
             @param start : 开始
             @param len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.pipe_checksum(CommLib.bytes.DataPipe,System.Int32,System.Int32)">
             校验码
            
             @param _pipe  : 队列
             @param _start : 开始
             @param _len   : 长度
             @return : 校验码
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.make_cmd(System.Byte,System.Byte[],System.Int32,System.Int32)">
             生成命令
            
             @param cmd   : 命令
             @param array : 参数
             @param start : 开始
             @param len   : 长度
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.make_cmd(System.Byte,System.Byte[])">
             生成命令(短版本)
            
             @param cmd   : 命令
             @param param : 参数
             @return : 命令包
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_get_version(System.Byte)">
             获取版本
            
             @param version : (0-硬件版本,1-软件版本,2-制造商)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_inventory">
             单次轮询
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_ninventory(System.Int16)">
             多次轮询
            
             @param count : 次数
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_stop_ninventory">
             停止多次轮询
            
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_select_param(System.Byte,System.Int32,System.Byte,System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_select_mode(System.Byte)" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_read(System.Int32,System.Byte,System.Int16,System.Int16)">
             读取数据
            
             @param Password : 访问密码
             @param MemBank  : 内存区域
             @param Offset   : 读取偏移地址(Word单位)
             @param Length   : 读取数据长度(Word单位)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_write(System.Int32,System.Byte,System.Int16,System.Int16,System.Byte[])">
             写标签
            
             @param Password : 密码
             @param MemBank  : 区域
             @param Offset   : 偏移(Word单位)
             @param Length   : 长度(Word单位)
             @param Data     : 数据
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_lock(System.Int32,System.Int32)" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_kill(System.Int32)">
             灭活
            
             @param AccessPassword : 密码
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_get_query">
             获取Query参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_query(System.Int16)">
             设置Query参数
            
             @param query ： 查询
             @return : 返回命令流
        </member>
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_region(System.Byte)" -->
        <!-- Badly formed XML comment ignored for member "M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_channel(System.Byte)" -->
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_get_channel">
             获取工作信道
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_auto(System.Boolean)">
             自动调频
            
             @param auto : 自动
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_get_tx_power">
             获取发送功率
            
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_tx_power(System.Int16)">
             设置输出功率
            
             @param power : 功率大小()
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_tx_continue(System.Boolean)">
             设置连续载波
            
             @param auto : 连续
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_get_rx_param">
             获取接收解调器参数
            
             @return : 返回命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_rx_param(System.Byte,System.Byte,System.Int16)">
             设置接收解调器参数
            
             @param mixer_g : MIX_G
             @param if_g    : IF_G
             @param thrd    : THRD
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_gpio(System.Byte,System.Byte,System.Int16)">
             脚位控制
            
             @param para0 : 操作类型(0-方向,1-写电平,2读电平)
             @param para1 : 端口范围(1~4 : gpio1~gpio4)
             @param para2 : 输入输出(0-输入,1-输出)/高低电平(0-低电平,1-高电平)
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.cmd_set_antenna(System.Byte)">
             设置天线
            
             @param ant : 天线
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Cmd.rfid_set_select(System.Int32,System.Int32,System.Byte[])">
             选择
            
             @param Bank : 段位
             @param Pos  : 位置
             @param Mask : 数据
             @return : 命令流
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Reader.#ctor(RfidLib.rfid.based.ITagEvent,System.Int32)">
             初始化
            
             @param event    : 消息接口
             @param channels : 通道数
        </member>
        <member name="F:RfidLib.rfid.slr5300.RfidSlr5300Set.region">
            区域
        </member>
        <member name="F:RfidLib.rfid.slr5300.RfidSlr5300Set.freq_channel">
            频道
        </member>
        <member name="F:RfidLib.rfid.slr5300.RfidSlr5300Set.times">
            每秒钟次数
        </member>
        <member name="F:RfidLib.rfid.slr5300.RfidSlr5300Set.PF_SETTING_REGION">
            设置名称
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Set.setupLoad(System.Object)">
             加载设置
            
             @param context : 上下文
        </member>
        <member name="M:RfidLib.rfid.slr5300.RfidSlr5300Set.setupSave(System.Object)">
             保存设置
            
             @param context : 上下文
        </member>
        <member name="T:RfidLib.rfid.TagAnt">
            =================================================================================================================
             天线记录数据
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.TagAnt.AntId">
            天线
        </member>
        <member name="F:RfidLib.rfid.TagAnt.Rssi">
            信号
        </member>
        <member name="F:RfidLib.rfid.TagAnt.Time">
            时间
        </member>
        <member name="F:RfidLib.rfid.TagAnt.Count">
            次数
        </member>
        <member name="F:RfidLib.rfid.TagAnt.BreakCount">
            统计 
        </member>
        <member name="F:RfidLib.rfid.TagAnt.waves">
            波形
        </member>
        <member name="M:RfidLib.rfid.TagAnt.OnReadWrite(CommLib.bytes.ByteFile)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读写数据
             </summary>
             <param name="b">字节文件</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.#ctor(System.Byte,System.SByte,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             天线数据
             </summary>
             <param name="antId"></param>
             <param name="rssi"></param>
             <param name="time"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.#ctor(System.Byte,System.SByte,System.Int64,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="antId"></param>
             <param name="rssi"></param>
             <param name="time"></param>
             <param name="count"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.Polling">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             循环 - 信号处理
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.RecordState(System.Collections.Generic.List{RfidLib.rfid.WaveValue}@,RfidLib.rfid.WaveValue)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             记录数
             </summary>
             <param name="waves"></param>
             <param name="value"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.GetBreakCount">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测断开次数
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.Copy(RfidLib.rfid.TagAnt)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制 - 数据
             </summary>
             <param name="a"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagAnt.Clone">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制 - 数据
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.TagItem">
            =================================================================================================================
             标签对象
            =================================================================================================================
        </member>
        <member name="F:RfidLib.rfid.TagItem.DEBUG">
            目标
        </member>
        <member name="F:RfidLib.rfid.TagItem.DEBUG_TAG">
            目标
        </member>
        <member name="F:RfidLib.rfid.TagItem.UseShowEpcUtf8">
            使用 UTF-8 编码
        </member>
        <member name="F:RfidLib.rfid.TagItem.UseShowEpcInvert">
            反向编码
        </member>
        <member name="F:RfidLib.rfid.TagItem.USE_4_CHANNELS_TO_DIR">
            使用4通道.
        </member>
        <member name="F:RfidLib.rfid.TagItem.MAX_ANT_COUNT">
            天线最大值
        </member>
        <member name="F:RfidLib.rfid.TagItem.DIR_PASS">
               靠近
        </member>
        <member name="F:RfidLib.rfid.TagItem.DIR_IN">
               进入
        </member>
        <member name="F:RfidLib.rfid.TagItem.DIR_OUT">
               退出
        </member>
        <member name="F:RfidLib.rfid.TagItem.DIR_UNKNOW">
               未知
        </member>
        <member name="F:RfidLib.rfid.TagItem.SORT_BY_INDEX">
            * 序号排序
        </member>
        <member name="F:RfidLib.rfid.TagItem.SORT_BY_EPC">
            * 名称排序
        </member>
        <member name="F:RfidLib.rfid.TagItem.SORT_BY_RSSI">
            * 信号强度排序
        </member>
        <member name="F:RfidLib.rfid.TagItem.SORT_BY_TIME">
            * 最新时间排序
        </member>
        <member name="F:RfidLib.rfid.TagItem.SORT_BY_COUNT">
            * 次数排序
        </member>
        <member name="F:RfidLib.rfid.TagItem.SortType">
            * 排序字段
        </member>
        <member name="F:RfidLib.rfid.TagItem.SortOrder">
            * 排序顺序 (true-升序/false-降序)
        </member>
        <member name="F:RfidLib.rfid.TagItem.dirName">
            方向
        </member>
        <member name="F:RfidLib.rfid.TagItem.localIndex">
            序号
        </member>
        <member name="F:RfidLib.rfid.TagItem.index">
            * 序号
        </member>
        <member name="F:RfidLib.rfid.TagItem.rssi">
            * 信号强弱(1 byte)
        </member>
        <member name="F:RfidLib.rfid.TagItem.pc">
            * PC-通讯协议(2 bytes)
        </member>
        <member name="F:RfidLib.rfid.TagItem.crc">
            * 校验码(2 bytes)
        </member>
        <member name="F:RfidLib.rfid.TagItem.epc">
            * EPC-电子标签码(12 bytes)
        </member>
        <member name="F:RfidLib.rfid.TagItem.rfu">
            * RFU 区域
        </member>
        <member name="F:RfidLib.rfid.TagItem.tid">
            * TID 区域-唯一码
        </member>
        <member name="F:RfidLib.rfid.TagItem.user">
            * USER 区域-用户区
        </member>
        <member name="F:RfidLib.rfid.TagItem.ant">
            * 天线 (1byte，32bits)
        </member>
        <member name="F:RfidLib.rfid.TagItem.dir">
            * 方向
        </member>
        <member name="F:RfidLib.rfid.TagItem.count">
            * 累计
        </member>
        <member name="F:RfidLib.rfid.TagItem.lastTime">
            * 激活时间
        </member>
        <member name="F:RfidLib.rfid.TagItem.firstTime">
            * 首次时间
        </member>
        <member name="F:RfidLib.rfid.TagItem.tag">
            * 关联信息
        </member>
        <member name="F:RfidLib.rfid.TagItem.breakCount">
             断开累计
        </member>
        <member name="F:RfidLib.rfid.TagItem.listAnt">
            * 天线数据
            * 主要是判断方向
        </member>
        <member name="F:RfidLib.rfid.TagItem.ArrayAntLast">
            * 最新数据
        </member>
        <member name="F:RfidLib.rfid.TagItem.ArrayRssiCounts">
            * 信号值 (对号入座,最多被16个扫描到?最多5个吧!)
        </member>
        <member name="F:RfidLib.rfid.TagItem.drawX">
            * 横坐标 
        </member>
        <member name="F:RfidLib.rfid.TagItem.drawY">
             * 纵坐标
        </member>
        <member name="F:RfidLib.rfid.TagItem.selected">
            * 选中
        </member>
        <member name="M:RfidLib.rfid.TagItem.#ctor">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="P:RfidLib.rfid.TagItem.Ants">
            -------------------------------------------------------------------------------------------------------------
              获取天线属性
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.RegistorInit">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.RegistorAnt(System.Byte,System.SByte,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             注册 - 天线
             </summary>
             <param name="ant"></param>
             <param name="rssi"></param>
             <param name="time"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.#ctor(System.SByte,System.UInt16,System.Byte[],System.UInt32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="rssi">信号强度</param>
             <param name="pc">序号</param>
             <param name="epc">电子序号</param>
             <param name="crc">校验码</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.#ctor(System.SByte,System.UInt16,System.Byte[],System.Byte[],System.UInt32,System.Byte)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="rssi">信号强度</param>
             <param name="pc">序号</param>
             <param name="epc">电子序号</param>
             <param name="tid">唯一码</param>
             <param name="crc">校验</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.#ctor(System.SByte,System.UInt16,System.Byte[],System.UInt32,System.Byte)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             构造
             </summary>
             <param name="rssi">信号</param>
             <param name="pc">序号</param>
             <param name="epc">标签</param>
             <param name="crc">校验码</param>
             <param name="ant">天线</param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.#ctor(RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             创建相同的数据
             </summary>
             <param name="item"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Polling">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             循环生成数据
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Update(System.Int32,System.Int32,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新 - 天线数据
             </summary>
             <param name="rssi"></param>
             <param name="time"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.DirUpdate(System.Int32,System.Int32,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             方向 - 更新
             </summary>
             <param name="ant"></param>
             <param name="rssi"></param>
             <param name="time"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.EqualTo(RfidLib.rfid.TagItem,RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             比较两个标签
             </summary>
             <param name="a"></param>
             <param name="b"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Finalize">
            -------------------------------------------------------------------------------------------------------------
             释放
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Equal(RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             相等比较
             </summary>
             <param name="pb"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Release">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             释放
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetBreakCount">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             变动次数
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.MakeMsbArray(System.UInt16,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成高位在前的数组
             </summary>
             <param name="pc">通讯协议</param>
             <param name="epc">产品编码</param>
             <returns>大端在前的码</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.CheckCrc">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检查 - 校验码
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.MakeCrc(System.UInt16,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成效验码
             </summary>
             <param name="pc">长度</param>
             <param name="epc">数值</param>
             <returns>效验码</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.MakePc(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成PC值
             </summary>
             <param name="epc"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Clone">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制数据
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetEpc">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetArrayString(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取数组转字符串
             </summary>
             <param name="array"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Array2Text(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             数组 --> 文字 (For EPC)
             </summary>
             <param name="array"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Text2Array(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             文字 --> 数组 (For EPC)
             </summary>
             <param name="text"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Text2EPC(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             文字转成EPC
             </summary>
             <param name="text"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextEpc">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取文本
             </summary>
             <returns>文本EPC</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.IsUtf8Byte(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             有效字符
             </summary>
             <param name="c"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.IsValidEpcString(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             判断合法
             </summary>
             <param name="array">数据序列</param>
             <returns>有效</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.IsMatchEpc(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             匹配
             </summary>
             <param name="epc"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.IsMatchTid(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             匹配
             </summary>
             <param name="tid"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextSpaceEpc(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取文字对齐字符
             </summary>
             <param name="spc">宽度</param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextSpaceTid(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             文章空格
             </summary>
             <param name="spc"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextSpaceUsr(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             格式化的字符串
             </summary>
             <param name="spc"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextSpaceRfu(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             格式化的字符串
             </summary>
             <param name="spc"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.TrimZero(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             去掉结尾的0字符
             </summary>
             <param name="s"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetEpcString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取汉字文本
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextEpcLsb">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 低位优先显示 - 文本EPC
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextLsb(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取文字
             </summary>
             <param name="dat"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextMsb(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取文字
             </summary>
             <param name="a"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextEpcMsb">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取 - 高位优先显示 - 文本EPC
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextTidMsb">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取TID文本值
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextUsrMsb">
            -------------------------------------------------------------------------------------------------------------
             <summary>
              获取USER文本值
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetTextRfuMsb">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取文本
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.SetEpc(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置
             </summary>
             <param name="epc"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.SetRfu(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置RFU
             </summary>
             <param name="rfu"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.SetTid(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             设置TID 
             </summary>
             <param name="tid"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetColorByEpc">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             根据EPC生成的RGB颜色
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetAnt(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             天线
             </summary>
             <param name="n"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetRssi(System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             信号强度
             </summary>
             <param name="n"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.MakeAntRssi(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取天线强度
             </summary>
             <param name="ant"></param>
             <param name="rssi"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.FindAntAndRssi(RfidLib.rfid.TagItem,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             
             </summary>
             <param name="e"></param>
             <param name="ant"></param>
             <param name="rssi"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.UpdateAntRssi">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新天线信号
             </summary>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.IsMatch(System.String)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             匹配过滤
             </summary>
             <param name="searchText"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.CompareTo(RfidLib.rfid.TagItem)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             对比
             </summary>
             <param name="o"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Make_Gen2_Crc16(System.UInt16,System.UInt16,System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成校验码
             </summary>
             <param name="preset"></param>
             <param name="poly"></param>
             <param name="array"></param>
             <param name="offset"></param>
             <param name="len"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Make_Gen2_Crc16(System.UInt16,System.UInt16,System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成校验码
             </summary>
             <param name="preset"></param>
             <param name="poly"></param>
             <param name="array"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.Make_Gen2_Crc16(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成校验码
             </summary>
             <param name="array"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.CheckDir">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             检测方向
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetDirName">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             方向名称
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.GetJsonText">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             生成json包
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.SetupUpdate(System.Boolean)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             更新设置
             </summary>
             <param name="context"></param>
             <param name="write"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.OnReadWrite(CommLib.bytes.ByteFile)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             消息接口
             </summary>
             <param name="b"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.TagItem.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             输出文本
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.WaveMaker">
            =======================================================================================
             <summary>
             数据生成
             </summary>
            =======================================================================================
        </member>
        <member name="F:RfidLib.rfid.WaveMaker.DEBUG">
            调试开关
        </member>
        <member name="F:RfidLib.rfid.WaveMaker.DEBUG_THIS">
             调试
        </member>
        <member name="F:RfidLib.rfid.WaveMaker.RSSI_DIFF">
             误差范围（-5dB ~ +5dB）
        </member>
        <member name="F:RfidLib.rfid.WaveMaker.RSSI_VALUE">
             没信号值 (-128 dBm)
        </member>
        <member name="F:RfidLib.rfid.WaveMaker.DELAY_TIME">
             2000 毫秒
        </member>
        <member name="M:RfidLib.rfid.WaveMaker.CheckSame(System.Int32,System.Int32)">
            -----------------------------------------------------------------------------------
             <summary>
             检测 - 误差范围
             </summary>
             <param name="a"></param>
             <param name="b"></param>
             <returns></returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveMaker.GetLast(System.Collections.Generic.List{RfidLib.rfid.WaveValue})">
            -----------------------------------------------------------------------------------
             <summary>
             获取最后一个
             </summary>
             <returns></returns>
            -----------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.WaveValueCompare">
            =====================================================================================
             <summary>
             数据比较类
             </summary>
            =====================================================================================
        </member>
        <member name="M:RfidLib.rfid.WaveValueCompare.Compare(RfidLib.rfid.WaveValue,RfidLib.rfid.WaveValue)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             比较数据
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.rfid.WaveValue">
            =====================================================================================
             <summary>
             波形数值
             </summary>
            =====================================================================================
        </member>
        <member name="F:RfidLib.rfid.WaveValue.ScaleRssi">
            信号 - 比例
        </member>
        <member name="F:RfidLib.rfid.WaveValue.ScaleTime">
            时间 - 缩放
        </member>
        <member name="F:RfidLib.rfid.WaveValue.StartTime">
            起始 - 时间
        </member>
        <member name="M:RfidLib.rfid.WaveValue.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:RfidLib.rfid.WaveValue.Time">
            -------------------------------------------------------------------------------------------------------------
             时间 -> X 
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="P:RfidLib.rfid.WaveValue.Rssi">
            -------------------------------------------------------------------------------------------------------------
             信号 -> Y
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.#ctor(System.Int32,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             初始化
             </summary>
             <param name="rssi"></param>
             <param name="time"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.IsBreak">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             是否丢失信号
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.ToPoint(System.Double,System.Double,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             转换成点
             </summary>
             <param name="stepRssi">信号倍数</param>
             <param name="stepTime">时间倍数</param>
             <param name="startTime">起始时间</param>
             <returns>点</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.GetX(System.Double,System.Int64)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取坐标
             </summary>
             <param name="stepTime"></param>
             <param name="startTime"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.GetY(System.Double)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取纵坐标
             </summary>
             <param name="stepRssi"></param>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.X">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             坐标
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.Y">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             坐标
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.ToString">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             文字
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.Copy(RfidLib.rfid.WaveValue)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制
             </summary>
             <param name="val"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.Clone">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             复制数据
             </summary>
             <returns></returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.rfid.WaveValue.OnReadWrite(CommLib.bytes.ByteFile)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             读写数据
             </summary>
             <param name="b"></param>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="T:RfidLib.SDK">
            <summary>
            开发包信息
            </summary>
        </member>
        <member name="F:RfidLib.SDK.DEBUG">
            <summary>
            调试开关
            </summary>
        </member>
        <member name="F:RfidLib.SDK.VERSION">
            <summary>
            版本
            </summary>
        </member>
        <member name="F:RfidLib.SDK.COPYRIGHT">
            <summary>
            版权
            </summary>
        </member>
        <member name="F:RfidLib.SDK.RFID_FILE_PROVIDER">
            <summary>
            文件共享
            </summary>
        </member>
        <member name="F:RfidLib.SDK.TAG_CHARSET">
            <summary>
            默认文字编码
            </summary>
        </member>
        <member name="M:RfidLib.SDK.GetVersion">
            <summary>
            获取版本
            </summary>
            <returns>版本</returns>
        </member>
        <member name="M:RfidLib.SDK.GetCopyright">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             获取版权
             </summary>
             <returns>版权</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.SDK.DumpArray``1(``0[])">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             自动判断,太强大了.
             </summary>
             <typeparam name="T">类型</typeparam>
             <param name="array">数组</param>
             <returns>字符串</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.SDK.Bytes2Buffer(System.Byte[])">
            -------------------------------------------------------------------------------------------------------------
              <summary>
              字节转换
              </summary>
              <param>字节流
                  <name>bytes[]</name>
              </param>
              <returns>缓冲区</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.SDK.Bytes2Buffer(System.Byte[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             字节转换成缓存
             </summary>
             <param name="bytes">字节</param>
             <param name="pos">位置</param>
             <param name="len">长度</param>
             <returns>缓冲区</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
        <member name="M:RfidLib.SDK.Buffer2Bytes(Windows.Storage.Streams.IBuffer)">
            -------------------------------------------------------------------------------------------------------------
             <summary>
             缓存到字节
             </summary>
             <param name="buffer">缓冲区</param>
             <returns>字节流</returns>
            -------------------------------------------------------------------------------------------------------------
        </member>
    </members>
</doc>
